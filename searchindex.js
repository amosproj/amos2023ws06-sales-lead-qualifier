Search.setIndex({"docnames": ["bdc", "bdc.steps", "bdc.steps.helpers", "config", "database", "database.leads", "demo", "documentation", "evp", "index", "logger", "main", "modules", "preprocessing", "readme_link"], "filenames": ["bdc.rst", "bdc.steps.rst", "bdc.steps.helpers.rst", "config.rst", "database.rst", "database.leads.rst", "demo.rst", "documentation.rst", "evp.rst", "index.rst", "logger.rst", "main.rst", "modules.rst", "preprocessing.rst", "readme_link.md"], "titles": ["bdc package", "bdc.steps package", "bdc.steps.helpers package", "config module", "database package", "database.leads package", "demo package", "Build Documentation", "evp package", "Welcome to Sales Lead Qualifier\u2019s documentation!", "logger package", "main module", "src", "preprocessing package", "Sales-Lead-Qualifier Project (AMOS WS 2023/24)"], "terms": {"step": [0, 5, 6, 7, 10, 12], "helper": [0, 1], "generate_hash_lead": [0, 1], "offeneregister_api": [0, 1], "text_analyz": [0, 1], "analyze_email": [0, 12], "analyzeemail": [0, 1], "name": [0, 1, 2, 5, 6, 7, 10], "added_col": [0, 1], "required_col": [0, 1], "finish": [0, 1], "load_data": [0, 1], "run": [0, 1, 5, 6, 9, 12], "verifi": [0, 1], "analyze_email_account": [0, 1], "extract_custom_domain": [0, 1], "analyze_review": [0, 12], "gptreviewsentimentanalyz": [0, 1], "model": [0, 1, 5], "model_encoding_nam": [0, 1], "max_prompt_token": [0, 1], "no_answ": [0, 1], "gpt_required_field": [0, 1], "system_message_for_sentiment_analysi": [0, 1], "user_message_for_sentiment_analysi": [0, 1], "extracted_col_nam": [0, 1], "gpt": [0, 1, 5, 7], "run_sentiment_analysi": [0, 1], "gpt_sentiment_analyze_review": [0, 1], "extract_text_from_review": [0, 1], "num_tokens_from_str": [0, 1], "batch_review": [0, 1], "gpt_calculate_avg_sentiment_scor": [0, 1], "textblob_calculate_avg_sentiment_scor": [0, 1], "smartreviewinsightsenhanc": [0, 1], "required_field": [0, 1], "language_tool": [0, 1], "min_ratings_count": [0, 1], "rating_dominance_threshold": [0, 1], "_get_language_tool": [0, 1], "_enhance_review_insight": [0, 1], "_analyze_rating_trend": [0, 1], "_quantify_polar": [0, 1], "_determine_polarization_typ": [0, 1], "_calculate_average_grammatical_scor": [0, 1], "_calculate_scor": [0, 1], "_grammatical_error": [0, 1], "check_api_kei": [0, 1], "is_review_valid": [0, 1], "log": [0, 1, 7, 10], "google_plac": [0, 12], "googleplac": [0, 1], "api_field": [0, 1], "calculate_confid": [0, 1], "df_field": [0, 1], "get_data_from_google_api": [0, 1], "get_first_place_candid": [0, 1], "gmap": [0, 1], "google_places_detail": [0, 12], "googleplacesdetail": [0, 1], "api_fields_output": [0, 1], "get_data_from_detailed_google_api": [0, 1], "gpt_summar": [0, 12], "gptsummar": [0, 1], "client": [0, 1, 7], "extract_the_raw_html_and_pars": [0, 1], "extracted_col_name_website_summari": [0, 1], "summarize_the_company_websit": [0, 1], "system_message_for_website_summari": [0, 1], "user_message_for_website_summari": [0, 1], "hash_gener": [0, 12], "hashgener": [0, 1], "preprocess_phonenumb": [0, 12], "preprocessphonenumb": [0, 1], "check_numb": [0, 1], "process_row": [0, 1], "regionalatla": [0, 7, 12], "reagionalatlas_feature_kei": [0, 1], "regions_gdf": [0, 1], "empty_result": [0, 1], "epsg_code_etr": [0, 1], "calculate_regional_scor": [0, 1], "get_data_from_address": [0, 1], "search_offeneregist": [0, 12], "searchoffeneregist": [0, 1], "offeneregisterapi": [0, 1, 2, 7], "_extract_company_related_data": [0, 1], "check_data_pres": [0, 1], "df": [0, 1, 5], "steperror": [0, 1], "class": [0, 1, 2, 5, 8, 10, 13], "limit": [0, 1, 6, 9], "int": [0, 1, 2, 6, 8], "none": [0, 1, 2, 5, 6, 8, 10], "sourc": [0, 1, 2, 4, 5, 6, 8, 10, 13], "base": [0, 1, 2, 5, 8, 10, 13], "object": [0, 1, 2, 5, 7, 8, 13], "leadhashgener": [1, 2], "base_path": [1, 2, 4, 5], "hash_check": [1, 2], "hash_lead": [1, 2], "find_companyaddress_by_lastname_firstnam": [1, 2], "find_companycapitals_by_lastname_firstnam": [1, 2], "find_companyname_by_lastname_firstnam": [1, 2], "find_companyobjective_by_lastname_firstnam": [1, 2], "textanalyz": [1, 2], "target_lang": [1, 2], "calculate_sentiment_analysis_scor": [1, 2], "correct_text": [1, 2], "find_number_of_grammatical_error": [1, 2], "find_number_of_spelling_error": [1, 2], "find_spelling_error": [1, 2], "translat": [1, 2], "get_lead_hash_gener": [1, 2], "force_refresh": [1, 5], "bool": [1, 5, 6, 8], "fals": [1, 5, 6, 7, 8], "A": [1, 2, 6, 7], "pipelin": [1, 5, 6, 12], "perform": 1, "variou": [1, 2, 7], "preprocess": [1, 5, 9, 12], "given": [1, 2, 5, 6, 7], "email": [1, 7], "address": [1, 2, 7], "The": [1, 2, 5, 6, 7, 10], "follow": [1, 7], "column": [1, 13], "ad": [1, 7], "success": [1, 7], "process": [1, 6, 9], "domain": [1, 7], "custom": [1, 6], "websit": [1, 2, 7], "ani": [1, 7], "email_valid": [1, 7], "boolean": [1, 7], "result": [1, 5], "check": [1, 2, 5], "first_name_in_account": [1, 7], "true": [1, 5, 6, 7, 13], "first": [1, 2, 7], "i": [1, 2, 6, 7, 10, 14], "part": [1, 7], "account": [1, 7], "last_name_in_account": [1, 7], "last": [1, 2, 7], "thi": [1, 7, 10, 14], "us": [1, 2, 5, 7, 10], "type": [1, 2, 6, 9], "str": [1, 2, 5, 6, 8], "list": [1, 2, 6, 7, 8], "field": [1, 9], "main": [1, 7, 9, 12], "datafram": [1, 5, 8], "execut": [1, 6, 7], "ar": [1, 7, 10], "requir": [1, 7], "exist": [1, 7], "input": [1, 2, 5, 6, 7], "befor": [1, 7, 10], "print": [1, 7], "report": [1, 5, 7], "clean": [1, 5, 7], "up": [1, 5, 7], "temporari": 1, "file": [1, 5, 6, 7, 10, 14], "Will": 1, "fail": 1, "load": [1, 5, 7, 8, 12], "data": [1, 2, 5, 6, 8, 9], "could": [1, 7], "an": [1, 2, 6, 7, 8, 14], "api": [1, 9], "call": [1, 7, 10], "read": [1, 7], "from": [1, 2, 5, 6, 7], "csv": [1, 5, 9], "can": [1, 7], "also": [1, 7], "empti": [1, 6, 7], "self": [1, 7], "analyz": [1, 2, 7], "actual": [1, 7], "rais": [1, 6], "ha": [1, 7], "been": [1, 7], "correctli": [1, 7], "present": [1, 7], "format": [1, 5, 7, 10, 12], "If": [1, 2, 6, 7, 10], "lead": [1, 2, 4, 6, 12], "seri": [1, 2, 7], "sentiment": [1, 2], "analysi": [1, 2, 9], "review": [1, 4, 5, 7], "4": [1, 8], "encod": [1, 7], "maximum": [1, 2, 7], "number": [1, 2, 6, 7], "token": [1, 7], "allow": [1, 7], "prompt": [1, 6, 7], "default": [1, 2, 5, 6], "valu": [1, 6, 8], "answer": 1, "dict": [1, 2, 5], "system": [1, 7], "messag": [1, 6, 7, 10], "user": [1, 6, 9, 14], "store": [1, 5, 7, 10], "score": [1, 7], "addit": [1, 6, 7], "instanc": [1, 7], "openai": [1, 7], "valid": [1, 6, 7], "kei": [1, 5, 7], "place_id": [1, 5], "review_list": 1, "calcul": [1, 2], "reviews_list": 1, "extract": [1, 7], "text": [1, 2, 10], "remov": [1, 7], "line": [1, 7], "charact": 1, "return": [1, 2, 5, 6, 7, 10], "string": [1, 5, 6, 7, 10], "max_token": 1, "batch": [1, 7], "smaller": 1, "reviews_sentiment_scor": [1, 7], "float": [1, 2, 7], "4096": 1, "paramet": [1, 2, 5, 6], "averag": [1, 7], "google_places_place_id": [1, 7], "consid": [1, 7], "cl100k_base": 1, "dict_valu": 1, "compani": [1, 2, 7], "": [1, 5, 8, 10, 12], "id": [1, 2, 5, 7], "place": 1, "you": [1, 7], "being": [1, 7], "provid": [1, 2], "come": 1, "between": [1, 7], "rang": [1, 6], "1": [1, 8], "just": [1, 7], "textblob": 1, "dictionari": [1, 10], "contain": [1, 2, 7, 14], "languag": [1, 2, 7], "inform": [1, 2, 10], "me": 1, "otherwis": [1, 2, 7], "enhanc": [1, 7], "insight": [1, 7, 9], "smart": [1, 7], "tool": [1, 7], "differ": [1, 7], "minimum": 1, "rate": [1, 7], "identifi": [1, 5, 7, 14], "polar": [1, 7], "threshold": 1, "high": [1, 7], "low": 1, "domin": [1, 7], "decim": 1, "lang": [1, 2], "get": [1, 7], "specifi": [1, 2, 5, 6, 10], "rating_tim": 1, "gener": [1, 9], "trend": [1, 7], "over": [1, 7], "time": [1, 7, 10], "quantifi": 1, "polarization_scor": 1, "highest_rating_ratio": 1, "lowest_rating_ratio": 1, "determin": [1, 10], "ratio": [1, 7], "grammat": [1, 2, 7], "error": [1, 2, 7], "review_avg_grammatical_scor": [1, 7], "review_polarization_typ": [1, 7], "review_polarization_scor": [1, 7], "review_highest_rating_ratio": [1, 7], "highest": [1, 7], "review_lowest_rating_ratio": [1, 7], "lowest": [1, 7], "review_rating_trend": [1, 7], "0": [1, 8], "api_kei": 1, "api_nam": 1, "specif": [1, 7], "origin": [1, 7], "repres": 1, "customlogg": [1, 10, 12], "amo": [1, 5, 7, 9], "app": [1, 9], "debug": 1, "function": [1, 2, 6, 7], "try": [1, 7], "find": [1, 2, 7], "correct": [1, 2, 7], "busi": [1, 9], "entri": [1, 7], "googl": [1, 9], "map": [1, 7], "databas": [1, 2, 7, 9, 12], "It": [1, 6, 7], "save": [1, 5, 7, 8, 12], "basic": [1, 7], "along": [1, 7], "retriev": [1, 2, 5, 6], "further": [1, 7], "detail": [1, 7], "confid": [1, 7], "should": [1, 7], "indic": [1, 7], "have": [1, 7], "found": [1, 2, 7], "vari": 1, "multipl": [1, 7], "higher": [1, 7], "when": [1, 5, 7], "match": [1, 7], "prefix": [1, 5], "google_places_business_statu": [1, 7], "statu": [1, 7], "google_places_formatted_address": [1, 7], "google_places_nam": [1, 7], "google_places_user_ratings_tot": [1, 7], "google_places_r": [1, 7], "google_places_price_level": [1, 7], "price": [1, 7], "level": [1, 7], "google_places_candidate_count_mail": [1, 7], "candid": 1, "mail": [1, 7], "search": [1, 9], "google_places_candidate_count_phon": [1, 7], "phone": [1, 7], "google_places_place_id_matches_phone_search": [1, 7], "whether": [1, 5, 7], "one": [1, 6, 7], "google_places_confid": [1, 7], "business_statu": 1, "formatted_address": 1, "user_ratings_tot": 1, "price_level": 1, "results_list": 1, "some": [1, 7], "how": [1, 7], "sure": [1, 7], "we": 1, "super": 1, "secret": [1, 7], "patent": 1, "ai": 1, "algorithm": [1, 7], "p": 1, "param": [1, 5, 6], "candidate_count_mail": 1, "candidate_count_phon": 1, "place_id_matches_phone_search": 1, "lead_row": 1, "request": 1, "queri": [1, 7], "input_typ": 1, "make": [1, 7], "construct": 1, "number_format": [1, 7], "gather": [1, 7], "link": 1, "separ": [1, 7], "locat": [1, 5, 7], "persist": 1, "set": [1, 2, 6, 7], "local": [1, 7], "aw": 1, "s3": [1, 5, 7], "google_places_detailed_websit": [1, 7], "google_places_detailed_typ": [1, 7], "attempt": [1, 2], "download": [1, 7], "raw": [1, 7], "html": [1, 7], "pass": [1, 7], "which": [1, 6, 7, 10], "summar": [1, 7], "valuabl": [1, 7], "salesperson": [1, 7], "sales_person_summari": 1, "summari": [1, 7], "url": [1, 2, 5], "summaris": 1, "handl": [1, 7], "except": [1, 7, 10], "mightaris": 1, "three": [1, 7], "five": [1, 7], "sentenc": 1, "includ": [1, 6, 7], "all": [1, 5, 6, 7], "necessari": 1, "might": [1, 7], "give": [1, 7], "comput": [1, 7, 10], "hash": [1, 5], "everi": [1, 7, 14], "These": [1, 7], "lead_hash": 1, "geo": 1, "possibl": 1, "e": [1, 7], "g": [1, 7], "49": [1, 7], "123": [1, 7], "456789": 1, "number_countri": [1, 7], "countri": [1, 7], "germani": [1, 7], "number_area": [1, 7], "area": [1, 7], "berlin": 1, "number_valid": [1, 7], "number_poss": [1, 7], "phone_numb": 1, "phonenumb": [1, 7], "row": [1, 2, 7], "geograph": [1, 7], "demograph": [1, 7], "wa": [1, 7], "current": [1, 5, 7], "through": [1, 7], "py": [1, 7], "merg": [1, 7], "geojson": 1, "case": [1, 6, 7], "problem": [1, 7], "25832": 1, "standard": [1, 7], "regionatla": 1, "pop_dens": 1, "popul": [1, 7], "densiti": [1, 7], "citi": [1, 7], "pop_develop": 1, "develop": [1, 7], "age_0": 1, "ag": [1, 7], "group": [1, 5, 7], "18": [1, 7], "age_1": 1, "30": [1, 7, 10], "age_2": 1, "45": [1, 7], "age_3": 1, "60": [1, 7], "age_4": 1, "pop_avg_ag": 1, "per_service_sector": 1, "percentag": 1, "servic": [1, 7], "sector": 1, "per_trad": 1, "trade": 1, "employment_r": 1, "employ": [1, 7], "unemployment_r": 1, "unemploy": [1, 7], "per_long_term_unemploy": 1, "long": [1, 7], "term": [1, 7], "investments_p_employe": 1, "invest": [1, 7], "per": [1, 7], "employe": [1, 7], "gross_salary_p_employe": 1, "gross": [1, 7], "salari": [1, 7], "disp_income_p_inhabit": 1, "dispos": 1, "incom": [1, 7], "inhabit": [1, 7], "tot_income_p_taxpay": 1, "total": [1, 7], "taxpay": [1, 7], "gdp_p_employe": 1, "gdp": [1, 7], "gdp_develop": 1, "gdp_p_inhabit": 1, "gdp_p_workhour": 1, "workhour": [1, 7], "pop_avg_age_zensu": 1, "zensu": [1, 7], "regional_scor": 1, "region": [1, 7], "regional_atlas_pop_dens": [1, 7], "regional_atlas_pop_develop": [1, 7], "regional_atlas_age_0": [1, 7], "regional_atlas_age_1": [1, 7], "regional_atlas_age_2": [1, 7], "regional_atlas_age_3": [1, 7], "regional_atlas_age_4": [1, 7], "regional_atlas_pop_avg_ag": [1, 7], "regional_atlas_per_service_sector": [1, 7], "regional_atlas_per_trad": [1, 7], "regional_atlas_employment_r": [1, 7], "regional_atlas_unemployment_r": [1, 7], "regional_atlas_per_long_term_unemploy": [1, 7], "regional_atlas_investments_p_employe": [1, 7], "regional_atlas_gross_salary_p_employe": [1, 7], "regional_atlas_disp_income_p_inhabit": [1, 7], "regional_atlas_tot_income_p_taxpay": [1, 7], "regional_atlas_gdp_p_employe": [1, 7], "regional_atlas_gdp_develop": [1, 7], "regional_atlas_gdp_p_inhabit": [1, 7], "regional_atlas_gdp_p_workhour": [1, 7], "regional_atlas_pop_avg_age_zensu": [1, 7], "regional_atlas_regional_scor": [1, 7], "bui": 1, "power": [1, 7], "potenti": [1, 7], "million": 1, "euro": 1, "000": 1, "extens": 1, "ai0201": 1, "ai0202": 1, "ai0203": 1, "ai0204": 1, "ai0205": 1, "ai0206": 1, "ai0207": 1, "ai0218": 1, "ai0706": 1, "ai0707": 1, "ai0710": 1, "ai_z08": 1, "ai0808": 1, "ai1001": 1, "ai1002": 1, "ai1601": 1, "ai1602": 1, "ai1701": 1, "ai1702": 1, "ai1703": 1, "ai1704": 1, "ai_z01": 1, "featur": [1, 5], "centroid": 1, "more": [1, 7, 14], "regional_atla": 1, "geodatafram": 1, "index": [1, 7, 9], "sale": [1, 2, 5, 6, 7], "qualif": 1, "relat": [1, 7], "readi": [1, 7], "cleanup": 1, "final": [1, 6, 7], "modifi": 1, "company_nam": 1, "offeneregist": [1, 7], "de": [1, 2, 7], "company_object": 1, "company_capit": 1, "capit": [1, 2], "company_capital_curr": 1, "currenc": [1, 2], "company_address": 1, "compan_address": 1, "abstract": [1, 5, 8], "parent": [1, 7], "enrich": [1, 5, 7], "sequenti": [1, 7], "collect": [1, 7], "alreadi": [1, 7], "forc": [1, 5], "_force_execut": 1, "properti": [1, 5], "home": [2, 5, 6], "runner": [2, 5, 6], "work": [2, 5, 6, 7], "amos2023ws06": [2, 5, 6], "qualifi": [2, 5, 6], "src": [2, 5, 6, 7, 9], "lead_data": 2, "data_fill_funct": 2, "callabl": 2, "step_nam": [2, 5], "fields_tofil": 2, "arg": [2, 8], "kwarg": [2, 8], "_find_from_positions_by_firstname_and_lastnam": 2, "last_nam": 2, "first_nam": 2, "posit": [2, 7], "tabl": [2, 5], "person": 2, "_find_row_by_companyid": 2, "company_id": 2, "_find_from_capital_by_companyid": 2, "_find_from_addresses_by_companyid": 2, "_find_from_objectives_by_companyid": 2, "_find_from_names_by_companyid": 2, "offerenregist": 2, "tupl": 2, "amount": [2, 7], "spell": 2, "detect": [2, 7], "en": [2, 7], "inp_text": 2, "option": [2, 5, 6, 7], "english": 2, "occur": 2, "max_retri": 2, "retri": 2, "3": [2, 8], "source_lang": 2, "auto": 2, "target": [2, 7], "submodul": [4, 12], "local_repositori": [4, 12], "localrepositori": [4, 5], "classification_report": [4, 5], "df_historical_output": [4, 5], "df_input": [4, 5], "df_output": [4, 5], "df_prediction_output": [4, 5], "df_preprocessed_input": [4, 5], "gpt_result": [4, 5], "ml_model": [4, 5], "snapshot": [4, 5], "clean_snapshot": [4, 5], "create_snapshot": [4, 5], "fetch_gpt_result": [4, 5], "fetch_review": [4, 5], "get_preprocessed_data_path": [4, 5], "insert_data": [4, 5], "load_classification_report": [4, 5], "load_lookup_t": [4, 5], "load_ml_model": [4, 5], "load_preprocessed_data": [4, 5], "save_classification_report": [4, 5], "save_datafram": [4, 5], "save_gpt_result": [4, 5], "save_lookup_t": [4, 5], "save_ml_model": [4, 5], "save_predict": [4, 5], "save_review": [4, 5], "repositori": [4, 7, 12], "datetime_format": [4, 5], "get_datafram": [4, 5], "get_enriched_data_path": [4, 5], "get_input_path": [4, 5], "set_datafram": [4, 5], "s3_repositori": [4, 12], "s3repositori": [4, 5], "events_bucket": [4, 5], "features_bucket": [4, 5], "lookup_t": [4, 5], "models_bucket": [4, 5], "decode_s3_url": [4, 5], "get_databas": [4, 12], "100k_historic_enrich": 5, "sumup_leads_email": 5, "leads_enrich": 5, "leads_predicted_s": 5, "preprocessed_data_fil": 5, "after": [5, 7], "ran": 5, "successfulli": 5, "delet": [5, 7], "state": 5, "creat": [5, 6, 9], "belong": 5, "sing": [5, 7], "file_id": 5, "operation_nam": 5, "fetch": 5, "oper": [5, 7, 10, 14], "json": [5, 6, 7], "desir": [5, 7], "histor": 5, "path": [5, 6, 7], "either": [5, 7], "todo": 5, "insert": 5, "new": [5, 7], "must": [5, 7, 14], "model_nam": [5, 8], "classif": [5, 7], "lookup": [5, 7], "panda": 5, "ml": 5, "attribut": [5, 7, 10], "chosen": [5, 7], "output": [5, 7], "save_d": 5, "date": [5, 7], "were": [5, 7], "upload": 5, "abc": [5, 8], "y": [5, 6, 7], "m": [5, 7, 8, 12], "d": [5, 10], "h": 5, "defin": 5, "refresh": 5, "event": [5, 7, 10], "historical_data": 5, "bucket": [5, 7], "get_int_input": [6, 12], "input_rang": 6, "integ": [6, 7], "displai": [6, 7], "valueerror": 6, "get_multiple_choic": [6, 12], "choic": [6, 7], "select": [6, 7], "enter": [6, 7], "invalid": [6, 8, 12], "get_string_input": [6, 12], "non": 6, "sensit": [6, 7], "strip": 6, "space": [6, 7], "get_yes_no_input": [6, 12], "ye": 6, "n": [6, 7], "insensit": 6, "add_step_if_request": [6, 12], "step_class": 6, "step_desc": 6, "step_warning_messag": 6, "evp_demo": [6, 12], "pipeline_demo": [6, 12], "demonstr": [6, 7], "configur": [6, 7], "point": [6, 7], "predict_merchantsize_on_lead_data_demo": [6, 12], "predict_single_lead": [6, 12], "evp": [6, 9, 12], "estimatedvaluepredictor": [6, 8, 12], "preprocessing_demo": [6, 12], "test_evp_model": [6, 12], "get_all_available_pipeline_json_config": [6, 12], "config_path": 6, "pipeline_config": 6, "avail": 6, "config": [6, 7, 9, 12], "get_pipeline_additional_step": [6, 12], "copi": [6, 7], "get_pipeline_config_from_json": [6, 12], "config_nam": 6, "default_pipeline_path": 6, "get_pipeline_initial_step": [6, 12], "initi": [6, 7], "get_pipeline_step": [6, 12], "both": [6, 7], "spdx": [7, 14], "licens": [7, 9], "mit": [7, 14], "filecopyrighttext": [7, 14], "2023": [7, 9], "felix": [7, 14], "zailska": [7, 14], "env": 7, "templat": 7, "variabl": 7, "applic": 7, "root": 7, "fill": 7, "correspond": 7, "To": 7, "virtual": 7, "your": 7, "Then": 7, "command": 7, "dev": 7, "product": 7, "within": 7, "now": 7, "activ": 7, "shell": 7, "singl": 7, "built": 7, "push": 7, "creation": 7, "github": 7, "action": 7, "For": [7, 14], "code": 7, "style": 7, "flake8": 7, "directori": 7, "pytest": 7, "coverag": 7, "In": 7, "anoth": 7, "task": 7, "packag": [7, 9, 12], "ensur": 7, "doe": 7, "left": 7, "remain": 7, "open": 7, "free": 7, "block": 7, "until": 7, "fix": 7, "furthermor": 7, "describ": 7, "here": 7, "uniform": 7, "throughout": 7, "compliant": [7, 14], "start": 7, "via": 7, "python": 7, "consist": 7, "organ": 7, "regist": 7, "thei": 7, "thing": 7, "done": 7, "black": 7, "isort": 7, "other": 7, "prettier": 7, "syntax": 7, "yaml": 7, "end": 7, "trail": 7, "whitespac": 7, "prevent": 7, "adher": 7, "2024": 7, "ahm": 7, "sheta": 7, "our": [7, 14], "industri": 7, "partner": 7, "hand": 7, "effect": 7, "increas": 7, "convers": 7, "primarili": 7, "team": 7, "modular": 7, "futur": 7, "proof": 7, "easi": 7, "add": [7, 10], "emploi": 7, "predict": [7, 8, 12], "adjust": 7, "about": 7, "recent": 7, "leverag": 7, "learn": 7, "so": 7, "program": 7, "refer": [7, 14], "md": 7, "choos": 7, "demo": [7, 9, 12], "util": 7, "want": 7, "pleas": [7, 14], "config_sprint09_releas": 7, "just_run_search_offeneregist": 7, "run_all_step": 7, "conigur": 7, "sprint": 7, "9": 7, "without": 7, "proce": 7, "subsequ": 7, "question": 7, "aris": 7, "scrape": 7, "take": 7, "cost": 7, "looong": 7, "regex": 7, "geocod": 7, "tri": 7, "emphas": 7, "depend": 7, "exclud": 7, "issu": 7, "enricht": 7, "ask": 7, "No": 7, "appli": 7, "certain": 7, "database_typ": 7, "order": 7, "post": 7, "crucial": 7, "involv": 7, "scale": 7, "numer": 7, "outlier": 7, "categor": 7, "hot": 7, "filter": 7, "out": [7, 10], "irrelev": 7, "couldn": 7, "t": 7, "dure": 7, "them": 7, "would": 7, "avoid": 7, "bia": 7, "introduc": 7, "even": 7, "pad": 7, "zero": 7, "show": 7, "where": 7, "preprocessed_data": 7, "six": 7, "random": [7, 8], "forest": [7, 8], "xgboost": [7, 8, 12], "naiv": [7, 8], "bay": [7, 8], "knn": [7, 8, 12], "adaboost": [7, 8, 12], "lightgbm": [7, 8, 12], "previous": 7, "x": [7, 8, 12], "l": [7, 8, 12], "xl": [7, 8, 12], "instead": 7, "label": 7, "alltogeth": 7, "worth": 7, "boost": 7, "while": 7, "small": 7, "trainig": 7, "dataset": 7, "mean": 7, "squar": 7, "submenu": 7, "essenc": 7, "li": 7, "forecast": 7, "unseen": 7, "gracefulli": 7, "simon": 7, "zimmermann": 7, "serv": 7, "pivot": 7, "esteem": 7, "sumup": 7, "pertain": 7, "garner": 7, "sign": 7, "refin": 7, "obtain": 7, "undergo": 7, "facilit": 7, "sophist": 7, "two": 7, "integr": 7, "submit": 7, "made": 7, "wai": 7, "write": 7, "sheet": 7, "directli": 7, "salesforc": 7, "plai": 7, "role": 7, "sole": 7, "compris": 7, "fundament": 7, "encompass": 7, "recogn": 7, "insuffici": 7, "baselin": 7, "divers": 7, "incorpor": 7, "interfac": 7, "organis": 7, "extend": 7, "common": 7, "implement": 7, "statist": 7, "itself": 7, "inspect": 7, "analys": 7, "surround": 7, "atla": 7, "infer": 7, "phase": 7, "essenti": 7, "elimin": 7, "stage": 7, "transform": 7, "therebi": 7, "render": 7, "amen": 7, "primari": 7, "orient": 7, "toward": 7, "life": 7, "howev": 7, "evolv": 7, "progress": 7, "influenc": 7, "consider": 7, "therefor": 7, "chang": 7, "onli": 7, "As": 7, "consequ": 7, "somewhat": 7, "inconsist": 7, "context": 7, "aim": 7, "By": 7, "intend": 7, "assist": 7, "priorit": 7, "decis": 7, "contact": 7, "approach": 7, "effici": 7, "optim": 7, "resourc": 7, "alloc": 7, "impact": 7, "proprietari": 7, "discern": 7, "discrimin": 7, "stratifi": 7, "taxonomi": 7, "imper": 7, "confidenti": 7, "underli": 7, "prohibit": 7, "its": 7, "public": 7, "disclosur": 7, "sophi": 7, "heasman": 7, "outlin": 7, "onlin": 7, "internet": 7, "most": 7, "http": 7, "www": 7, "com": 7, "kontaktieren": 7, "vertriebsteam": 7, "web": 7, "overview": 7, "platform": 7, "doc": 7, "meta": 7, "facebook": 7, "graph": 7, "highlight": 7, "acquisit": 7, "mai": 7, "deriv": 7, "exampl": 7, "mustermann": 7, "musternam": 7, "mustercompani": 7, "1234": 7, "56789": 7, "musteremail": 7, "symbol": 7, "host": 7, "written": 7, "49123456789": 7, "erlangen": 7, "weather": 7, "musterstr": 7, "100": [7, 8], "star": 7, "gave": 7, "same": 7, "musterwebsit": 7, "florist": 7, "2649": 7, "6": 7, "96": 7, "16": 7, "8": [7, 8, 10], "31": [7, 10], "26": 7, "17": 7, "7": 7, "42": [7, 8], "88": 7, "28": 7, "59": 7, "63": 7, "23703": 7, "84983": 7, "61845": 7, "41": 7, "3761": 7, "93": 7, "56": 7, "lucca": 7, "baumg\u00e4rtner": 7, "endpoint": 7, "enabl": 7, "best": 7, "chanc": 7, "combin": 7, "probabl": 7, "max": 7, "muster": 7, "491721234567": 7, "mybusi": 7, "melani": 7, "491322133321": 7, "flowershop": 7, "gmail": 7, "nl": 7, "fulltext": 7, "look": 7, "els": 7, "unless": 7, "full": 7, "everyth": 7, "those": 7, "noth": 7, "ruchita": 7, "nathani": 7, "llm": 7, "explor": 7, "crystalchat": 7, "hug": 7, "face": 7, "huggingfac": 7, "co": 7, "llm360": 7, "despit": 7, "capabl": 7, "intens": 7, "computation": 7, "heavi": 7, "cannot": 7, "infrastructur": 7, "constraint": 7, "colab": 7, "although": 7, "feasibl": 7, "gpu": 7, "altern": 7, "challeng": 7, "viabl": 7, "known": 7, "offer": 7, "unparallel": 7, "understand": 7, "associ": 7, "robust": 7, "acknowledg": 7, "experi": 7, "sagemak": 7, "due": 7, "dilig": 7, "evalu": 7, "achiev": 7, "advanc": 7, "suggest": 7, "comprehens": 7, "exactli": 7, "exact": 7, "simplif": 7, "ofth": 7, "better": 7, "f1": 7, "across": 7, "accord": 7, "lunch": 7, "theorem": 7, "univers": 7, "superior": 7, "unfortun": 7, "did": 7, "satisfactorili": 7, "methodolgi": 7, "quadrat": 7, "vecotr": 7, "svm": 7, "fcnnc": 7, "fcnnr": 7, "k": 7, "nearest": 7, "neighbor": 7, "bernoulli": 7, "took": 7, "never": 7, "believ": 7, "becaus": 7, "veri": 7, "misclassif": 7, "hard": 7, "minim": 7, "fcnn": 7, "lower": 7, "than": 7, "mainli": 7, "had": 7, "84": 7, "00": 7, "layer": 7, "relu": 7, "logit": 7, "softmax": 7, "loss": 7, "investig": 7, "cross": 7, "entropi": 7, "l2": 7, "adam": 7, "sctohast": 7, "gradient": 7, "descent": 7, "moreov": 7, "skip": 7, "l1": 7, "regular": 7, "techniqu": 7, "weight": [7, 8], "haven": 7, "outperform": 7, "simpler": 7, "There": 7, "scientif": 7, "paper": 7, "inter": 7, "speci": 7, "cell": 7, "pulmonari": 7, "hemosiderophag": 7, "equin": 7, "human": 7, "felin": 7, "specimen": 7, "marzahl": 7, "et": 7, "al": 7, "natur": 7, "articl": 7, "s41597": 7, "022": 7, "01389": 7, "wherea": 7, "contin": 7, "subject": 7, "threshhold": 7, "respectivli": 7, "yield": [7, 10], "still": 7, "wors": 7, "produc": 7, "satisfactori": 7, "15": 7, "reason": 7, "11": 7, "significantli": 7, "short": 7, "tabular": 7, "novel": 7, "commonli": 7, "encount": 7, "structur": 7, "titl": 7, "attent": 7, "interpret": 7, "arik": 7, "arxiv": 7, "org": 7, "ab": 7, "1908": 7, "07442": 7, "capac": 7, "salient": 7, "similarli": 7, "seem": 7, "respond": 7, "sub": 7, "section": 7, "discuss": 7, "arer": 7, "lot": 7, "54": 7, "addition": 7, "dimension": 7, "132": 7, "Not": 7, "equal": 7, "relev": 7, "decisiontre": 7, "distanc": [7, 8], "10": [7, 8, 10], "19": 7, "10000": 7, "round": 7, "2000": [7, 8], "leav": 7, "see": 7, "mark": 7, "bold": 7, "6314": 7, "6073": 7, "6150": 7, "6442": 7, "6098": 7, "6405": 7, "6725": 7, "6655": 7, "6642": 7, "6967": 7, "6523": 7, "6956": 7, "randomforest": [7, 8, 12], "6288": 7, "6075": 7, "5995": 7, "6198": 7, "6090": 7, "6252": 7, "6680": 7, "6506": 7, "6664": 7, "6591": 7, "6644": 7, "observ": 7, "slight": 7, "almost": 7, "compar": 7, "few": 7, "retain": 7, "enough": 7, "highli": 7, "82": 7, "83": 7, "81": 7, "77": 7, "02": 7, "13": 7, "22": 7, "14": 7, "08": 7, "09": 7, "06": 7, "07": 7, "05": 7, "21": 7, "78": 7, "04": 7, "similar": 7, "second": 7, "worst": 7, "again": 7, "mostli": 7, "decreas": 7, "27": 7, "33": [7, 10], "34": 7, "12": 7, "79": 7, "29": 7, "32": 7, "20": [7, 10], "slightli": 7, "interestingli": 7, "bare": 7, "affect": 7, "got": 7, "showcas": 7, "elev": 7, "overfit": 7, "emphasi": 7, "accur": 7, "recommend": 7, "yet": 7, "version": 7, "carri": [7, 10], "conceptu": 7, "modul": [7, 9, 12], "pydant": 7, "plan": 7, "commun": 7, "devic": 7, "whenev": 7, "suppos": 7, "trigger": 7, "complet": 7, "back": 7, "rank": 7, "decid": 7, "queue": 7, "rout": 7, "asynchron": 7, "thread": 7, "librari": 7, "sdk": 7, "facebook_app_id": 7, "facebook_app_secret": 7, "owner": 7, "too": 7, "permiss": 7, "paramount": 7, "legal": 7, "ramif": 7, "kind": 7, "individu": 7, "privaci": 7, "regul": 7, "eu": 7, "earli": 7, "live": 7, "pars": 7, "site": 7, "pattern": 7, "precis": 7, "quit": 7, "accumul": 7, "faster": 7, "why": 7, "scrape_address": 7, "semant": 7, "practic": 7, "pollut": 7, "unnecessari": 7, "proper": 7, "cut": 7, "down": 7, "reduc": 7, "possibli": 7, "briefli": 7, "justifi": 7, "arbitrari": 7, "expand": 7, "qualiti": 7, "metric": 7, "regional_atlas_scor": 7, "google_confidence_scor": 7, "arbitrarili": 7, "promis": 7, "bozkurt": [7, 14], "beyond": 7, "prototyp": 7, "scenario": 7, "coordin": 7, "central": 7, "contrast": 7, "sever": 7, "interact": 7, "unprocess": 7, "regard": 7, "unbias": 7, "twiiter": 7, "tweepi": 7, "purpos": 7, "shortfal": 7, "unavail": 7, "conduct": 7, "pose": 7, "embed": 7, "themselv": 7, "someth": 7, "like": 7, "help": 7, "deepli": 7, "impos": 7, "documentaion": 7, "stabl": 7, "under": [7, 10, 14], "epic": 7, "authent": 7, "registr": 7, "sampl": 7, "bugfix": 7, "bug": 7, "wrong": 7, "protect": 7, "against": 7, "direct": 7, "sd": 7, "approv": 7, "period": 7, "henc": 7, "git": 7, "easili": 7, "trace": 7, "manu": 7, "musterperson": 7, "alwai": 7, "signoff": 7, "identif": 7, "pair": 7, "mention": 7, "clariti": 7, "author": 7, "fau": 7, "let": 7, "remot": 7, "checkout": 7, "don": 7, "forget": 7, "go": 7, "click": 7, "updat": 7, "photo": 7, "below": 7, "slack": 7, "await": 7, "wait": 7, "comment": 7, "warrant": 7, "onc": 7, "conflict": 7, "solv": 7, "manual": 7, "resolv": 7, "editor": 7, "head": 7, "adopt": 7, "off": 7, "togeth": 7, "rather": 7, "alon": 7, "feel": 7, "announc": 7, "chat": 7, "remerg": 7, "shouldn": 7, "matter": 7, "pip": 7, "pipreq": 7, "cyclonedx": 7, "bom": 7, "import": 7, "r": 7, "pb": 7, "o": 7, "xmldocument": 7, "xml": 7, "loadxml": 7, "csvpath": 7, "arrai": 7, "iter": 7, "node": 7, "selectnod": 7, "foreach": 7, "_": 7, "purl": 7, "eq": 7, "scikit_learn": 7, "scikit": 7, "mix": 7, "convertfrom": 7, "pscustomobject": 7, "export": 7, "notypeinform": 7, "licensepath": 7, "cc": 7, "BY": 7, "fabian": 7, "paul": 7, "utech": 7, "f": 7, "gmx": 7, "net": 7, "filepath": 7, "move": 7, "wiki": 7, "favor": 7, "overlap": 7, "password": 7, "char": 7, "special": 7, "re": 7, "login": 7, "mfa": 7, "iam": 7, "access": 7, "info": 7, "firstnam": 7, "lastnam": 7, "credenti": 7, "scroll": 7, "accept": 7, "warn": 7, "tag": 7, "modif": 7, "creator": 7, "pingabl": 7, "seo": 7, "dn": 7, "datapoint": 7, "categori": 7, "visitor": 7, "revenu": 7, "recognit": 7, "imag": 7, "cafe": 7, "restaur": 7, "retail": 7, "etc": 7, "northdata": 7, "understodd": 7, "5000": 7, "month": 7, "bundesanzeig": 7, "handelsregist": 7, "deutschland": 7, "popular": 7, "insta": 7, "mayb": 7, "chatgpt": 7, "deal": 7, "profil": 7, "pdf": 7, "2307": 7, "10234": 7, "uniqu": 7, "frequent": 7, "layout": 7, "v": 7, "db": 7, "parquet": 7, "folder": 7, "hide": 7, "behind": 7, "listen": 7, "messagequeu": 7, "routingqueu": 7, "enqueu": 7, "idl": 7, "element": 7, "whole": 7, "multi": 7, "expect": 7, "becom": 7, "tree": 7, "na\u00efv": 7, "reduct": 7, "normal": [7, 12, 13], "dropout": 7, "nn": 7, "depth": 7, "width": 7, "xavier": 7, "he": 7, "sigmoid": 7, "lock": 7, "restart": 7, "pc": 7, "termin": 7, "window": 7, "workaround": 7, "bash": 7, "ubuntu": 7, "ignorestart": 7, "ignoreend": 7, "red": [7, 10, 12], "center": 7, "osmnx": 7, "rebas": 7, "train_siz": 8, "val_siz": 8, "test_siz": 8, "model_typ": 8, "limit_class": 8, "selected_featur": 8, "model_arg": 8, "lead_classifi": [8, 12], "classifi": [8, 9, 12], "merchantsizebydpv": [8, 12], "save_model": [8, 12], "train": [8, 12], "epoch": 8, "batch_siz": 8, "n_estim": 8, "class_weight": 8, "random_st": 8, "x_train": 8, "y_train": 8, "x_test": 8, "y_test": 8, "num_class": 8, "5": 8, "knnclassifi": [8, 12], "n_neighbor": 8, "num_leav": 8, "1000": 8, "enum": 8, "enumer": 8, "2": 8, "naivebayesclassifi": [8, 12], "naivebay": [8, 12], "xgb": [8, 12], "num_round": 8, "project": 9, "w": 9, "24": 9, "sum": 9, "logo": 9, "build": [9, 14], "environ": 9, "pre": 9, "commit": 9, "hook": 9, "vision": 9, "mission": 9, "usag": 9, "design": [9, 14], "introduct": 9, "strategi": [9, 13], "openllm": 9, "comparison": 9, "conclus": 9, "concept": 9, "unreal": 9, "idea": 9, "miscellan": 9, "unus": 9, "control": 9, "twitter": 9, "contribut": 9, "sbom": 9, "bdc": [9, 12], "logger": [9, 12], "page": [9, 14], "log_dir": 10, "add_file_handl": [10, 12], "handler": 10, "disable_console_output": [10, 12], "disable_file_output": [10, 12], "enable_console_output": [10, 12], "enable_file_output": [10, 12], "has_console_handl": [10, 12], "has_file_handl": [10, 12], "fileoutformatt": [10, 12], "formatt": 10, "fmt": [10, 12], "asctim": 10, "levelnam": 10, "filenam": 10, "lineno": 10, "record": 10, "operand": 10, "coupl": 10, "preparatori": 10, "logrecord": 10, "getmessag": 10, "usestim": 10, "formattim": 10, "formatexcept": 10, "append": 10, "stdoutformatt": [10, 12], "x1b": 10, "38": 10, "20m": 10, "0m": 10, "34m": 10, "40": 10, "50": 10, "1m": 10, "blue": [10, 12], "bold_r": [10, 12], "grei": [10, 12], "reset": [10, 12], "yellow": [10, 12], "get_logg": [10, 12], "subpackag": 12, "content": 12, "console_util": 12, "pipeline_util": 12, "predictor": 12, "class_label_encod": [12, 13], "fill_missing_valu": [12, 13], "filter_out_null_data": [12, 13], "implement_preprocessing_pipelin": [12, 13], "min_max_sc": [12, 13], "multiple_label_encod": [12, 13], "remove_outliers_zscor": [12, 13], "robust_sc": [12, 13], "save_preprocessed_data": [12, 13], "single_one_hot_encod": [12, 13], "standard_sc": [12, 13], "filter_null_data": 13, "historical_bool": 13, "constant": 13, "berkai": 14, "dedic": 14, "reus": 14, "copyright": 14, "declar": 14}, "objects": {"": [[0, 0, 0, "-", "bdc"], [3, 0, 0, "-", "config"], [4, 0, 0, "-", "database"], [6, 0, 0, "-", "demo"], [8, 0, 0, "-", "evp"], [10, 0, 0, "-", "logger"], [11, 0, 0, "-", "main"], [13, 0, 0, "-", "preprocessing"]], "bdc": [[0, 0, 0, "-", "pipeline"], [1, 0, 0, "-", "steps"]], "bdc.pipeline": [[0, 1, 1, "", "Pipeline"]], "bdc.pipeline.Pipeline": [[0, 2, 1, "", "run"]], "bdc.steps": [[1, 0, 0, "-", "analyze_emails"], [1, 0, 0, "-", "analyze_reviews"], [1, 0, 0, "-", "google_places"], [1, 0, 0, "-", "google_places_detailed"], [1, 0, 0, "-", "gpt_summarizer"], [1, 0, 0, "-", "hash_generator"], [2, 0, 0, "-", "helpers"], [1, 0, 0, "-", "preprocess_phonenumbers"], [1, 0, 0, "-", "regionalatlas"], [1, 0, 0, "-", "search_offeneregister"], [1, 0, 0, "-", "step"]], "bdc.steps.analyze_emails": [[1, 1, 1, "", "AnalyzeEmails"], [1, 4, 1, "", "analyze_email_account"], [1, 4, 1, "", "extract_custom_domain"]], "bdc.steps.analyze_emails.AnalyzeEmails": [[1, 3, 1, "id0", "added_cols"], [1, 2, 1, "", "finish"], [1, 2, 1, "", "load_data"], [1, 3, 1, "id1", "name"], [1, 3, 1, "id2", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "verify"]], "bdc.steps.analyze_reviews": [[1, 1, 1, "", "GPTReviewSentimentAnalyzer"], [1, 1, 1, "", "SmartReviewInsightsEnhancer"], [1, 4, 1, "", "check_api_key"], [1, 4, 1, "", "is_review_valid"], [1, 5, 1, "", "log"]], "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer": [[1, 3, 1, "id3", "MAX_PROMPT_TOKENS"], [1, 3, 1, "id4", "added_cols"], [1, 2, 1, "id5", "batch_reviews"], [1, 2, 1, "id6", "extract_text_from_reviews"], [1, 3, 1, "id7", "extracted_col_name"], [1, 2, 1, "id8", "finish"], [1, 3, 1, "id9", "gpt"], [1, 2, 1, "", "gpt_calculate_avg_sentiment_score"], [1, 3, 1, "id10", "gpt_required_fields"], [1, 2, 1, "id11", "gpt_sentiment_analyze_review"], [1, 2, 1, "id12", "load_data"], [1, 3, 1, "id13", "model"], [1, 3, 1, "id14", "model_encoding_name"], [1, 3, 1, "id15", "name"], [1, 3, 1, "id16", "no_answer"], [1, 2, 1, "id17", "num_tokens_from_string"], [1, 3, 1, "", "required_cols"], [1, 2, 1, "id18", "run"], [1, 2, 1, "id19", "run_sentiment_analysis"], [1, 3, 1, "id20", "system_message_for_sentiment_analysis"], [1, 3, 1, "", "text_analyzer"], [1, 2, 1, "", "textblob_calculate_avg_sentiment_score"], [1, 3, 1, "id21", "user_message_for_sentiment_analysis"], [1, 2, 1, "id22", "verify"]], "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer": [[1, 3, 1, "id23", "MIN_RATINGS_COUNT"], [1, 3, 1, "id24", "RATING_DOMINANCE_THRESHOLD"], [1, 2, 1, "", "_analyze_rating_trend"], [1, 2, 1, "", "_calculate_average_grammatical_score"], [1, 2, 1, "", "_calculate_score"], [1, 2, 1, "", "_determine_polarization_type"], [1, 2, 1, "", "_enhance_review_insights"], [1, 2, 1, "", "_get_language_tool"], [1, 2, 1, "", "_grammatical_errors"], [1, 2, 1, "", "_quantify_polarization"], [1, 3, 1, "id25", "added_cols"], [1, 2, 1, "id26", "finish"], [1, 3, 1, "", "language_tools"], [1, 2, 1, "id27", "load_data"], [1, 3, 1, "id28", "name"], [1, 3, 1, "id29", "required_fields"], [1, 2, 1, "id30", "run"], [1, 3, 1, "", "text_analyzer"], [1, 2, 1, "id31", "verify"]], "bdc.steps.google_places": [[1, 1, 1, "", "GooglePlaces"]], "bdc.steps.google_places.GooglePlaces": [[1, 3, 1, "id32", "added_cols"], [1, 3, 1, "", "api_fields"], [1, 2, 1, "", "calculate_confidence"], [1, 3, 1, "", "df_fields"], [1, 2, 1, "", "finish"], [1, 2, 1, "", "get_data_from_google_api"], [1, 2, 1, "", "get_first_place_candidate"], [1, 3, 1, "", "gmaps"], [1, 2, 1, "", "load_data"], [1, 3, 1, "id33", "name"], [1, 3, 1, "id34", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "verify"]], "bdc.steps.google_places_detailed": [[1, 1, 1, "", "GooglePlacesDetailed"]], "bdc.steps.google_places_detailed.GooglePlacesDetailed": [[1, 3, 1, "id35", "added_cols"], [1, 3, 1, "", "api_fields"], [1, 3, 1, "", "api_fields_output"], [1, 3, 1, "", "df_fields"], [1, 2, 1, "", "finish"], [1, 2, 1, "", "get_data_from_detailed_google_api"], [1, 3, 1, "", "gmaps"], [1, 2, 1, "", "load_data"], [1, 3, 1, "id36", "name"], [1, 3, 1, "id37", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "verify"]], "bdc.steps.gpt_summarizer": [[1, 1, 1, "", "GPTSummarizer"]], "bdc.steps.gpt_summarizer.GPTSummarizer": [[1, 3, 1, "id38", "added_cols"], [1, 3, 1, "", "client"], [1, 2, 1, "", "extract_the_raw_html_and_parse"], [1, 3, 1, "", "extracted_col_name_website_summary"], [1, 2, 1, "", "finish"], [1, 3, 1, "", "gpt_required_fields"], [1, 2, 1, "", "load_data"], [1, 3, 1, "", "model"], [1, 3, 1, "id39", "name"], [1, 3, 1, "", "no_answer"], [1, 3, 1, "id40", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "summarize_the_company_website"], [1, 3, 1, "", "system_message_for_website_summary"], [1, 3, 1, "", "user_message_for_website_summary"], [1, 2, 1, "", "verify"]], "bdc.steps.hash_generator": [[1, 1, 1, "", "HashGenerator"]], "bdc.steps.hash_generator.HashGenerator": [[1, 3, 1, "id41", "added_cols"], [1, 2, 1, "", "finish"], [1, 2, 1, "", "load_data"], [1, 3, 1, "id42", "name"], [1, 3, 1, "id43", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "verify"]], "bdc.steps.helpers": [[2, 0, 0, "-", "generate_hash_leads"], [2, 4, 1, "", "get_lead_hash_generator"], [2, 0, 0, "-", "offeneregister_api"], [2, 0, 0, "-", "text_analyzer"]], "bdc.steps.helpers.generate_hash_leads": [[2, 1, 1, "", "LeadHashGenerator"]], "bdc.steps.helpers.generate_hash_leads.LeadHashGenerator": [[2, 3, 1, "", "BASE_PATH"], [2, 2, 1, "", "hash_check"], [2, 2, 1, "", "hash_lead"]], "bdc.steps.helpers.offeneregister_api": [[2, 1, 1, "", "OffeneRegisterAPI"]], "bdc.steps.helpers.offeneregister_api.OffeneRegisterAPI": [[2, 2, 1, "", "find_companyAddress_by_lastName_firstName"], [2, 2, 1, "", "find_companyCapitals_by_lastName_firstName"], [2, 2, 1, "", "find_companyName_by_lastName_firstName"], [2, 2, 1, "", "find_companyObjective_by_lastName_firstName"]], "bdc.steps.helpers.text_analyzer": [[2, 1, 1, "", "TextAnalyzer"]], "bdc.steps.helpers.text_analyzer.TextAnalyzer": [[2, 3, 1, "", "TARGET_LANG"], [2, 2, 1, "", "calculate_sentiment_analysis_score"], [2, 2, 1, "", "correct_text"], [2, 2, 1, "", "find_number_of_grammatical_errors"], [2, 2, 1, "", "find_number_of_spelling_errors"], [2, 2, 1, "", "find_spelling_errors"], [2, 2, 1, "", "translate"]], "bdc.steps.preprocess_phonenumbers": [[1, 1, 1, "", "PreprocessPhonenumbers"]], "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers": [[1, 3, 1, "id44", "added_cols"], [1, 2, 1, "", "check_number"], [1, 2, 1, "", "finish"], [1, 2, 1, "", "load_data"], [1, 3, 1, "id45", "name"], [1, 2, 1, "", "process_row"], [1, 3, 1, "id46", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "verify"]], "bdc.steps.regionalatlas": [[1, 1, 1, "", "RegionalAtlas"]], "bdc.steps.regionalatlas.RegionalAtlas": [[1, 3, 1, "id47", "added_cols"], [1, 2, 1, "", "calculate_regional_score"], [1, 3, 1, "id48", "df_fields"], [1, 3, 1, "id49", "empty_result"], [1, 3, 1, "id50", "epsg_code_etrs"], [1, 2, 1, "", "finish"], [1, 2, 1, "", "get_data_from_address"], [1, 2, 1, "", "load_data"], [1, 3, 1, "id51", "name"], [1, 3, 1, "id52", "reagionalatlas_feature_keys"], [1, 3, 1, "id53", "regions_gdfs"], [1, 3, 1, "id54", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "verify"]], "bdc.steps.search_offeneregister": [[1, 1, 1, "", "SearchOffeneRegister"]], "bdc.steps.search_offeneregister.SearchOffeneRegister": [[1, 2, 1, "", "_extract_company_related_data"], [1, 3, 1, "id55", "added_cols"], [1, 2, 1, "id56", "finish"], [1, 2, 1, "id57", "load_data"], [1, 3, 1, "id58", "name"], [1, 3, 1, "id59", "offeneregisterAPI"], [1, 3, 1, "id60", "required_cols"], [1, 2, 1, "id61", "run"], [1, 2, 1, "id62", "verify"]], "bdc.steps.step": [[1, 1, 1, "", "Step"], [1, 7, 1, "", "StepError"]], "bdc.steps.step.Step": [[1, 3, 1, "id63", "added_cols"], [1, 2, 1, "", "check_data_presence"], [1, 6, 1, "", "df"], [1, 2, 1, "", "finish"], [1, 2, 1, "", "load_data"], [1, 3, 1, "id64", "name"], [1, 3, 1, "id65", "required_cols"], [1, 2, 1, "", "run"], [1, 2, 1, "", "verify"]], "database": [[4, 4, 1, "", "get_database"], [5, 0, 0, "-", "leads"]], "database.leads": [[5, 0, 0, "-", "local_repository"], [5, 0, 0, "-", "repository"], [5, 0, 0, "-", "s3_repository"]], "database.leads.local_repository": [[5, 1, 1, "", "LocalRepository"]], "database.leads.local_repository.LocalRepository": [[5, 3, 1, "", "BASE_PATH"], [5, 3, 1, "", "CLASSIFICATION_REPORTS"], [5, 3, 1, "", "DF_HISTORICAL_OUTPUT"], [5, 3, 1, "", "DF_INPUT"], [5, 3, 1, "", "DF_OUTPUT"], [5, 3, 1, "", "DF_PREDICTION_OUTPUT"], [5, 3, 1, "", "DF_PREPROCESSED_INPUT"], [5, 3, 1, "", "GPT_RESULTS"], [5, 3, 1, "", "ML_MODELS"], [5, 3, 1, "", "REVIEWS"], [5, 3, 1, "", "SNAPSHOTS"], [5, 2, 1, "", "clean_snapshots"], [5, 2, 1, "", "create_snapshot"], [5, 2, 1, "", "fetch_gpt_result"], [5, 2, 1, "", "fetch_review"], [5, 2, 1, "", "get_preprocessed_data_path"], [5, 2, 1, "", "insert_data"], [5, 2, 1, "", "load_classification_report"], [5, 2, 1, "", "load_lookup_table"], [5, 2, 1, "", "load_ml_model"], [5, 2, 1, "", "load_preprocessed_data"], [5, 2, 1, "", "save_classification_report"], [5, 2, 1, "", "save_dataframe"], [5, 2, 1, "", "save_gpt_result"], [5, 2, 1, "", "save_lookup_table"], [5, 2, 1, "", "save_ml_model"], [5, 2, 1, "", "save_prediction"], [5, 2, 1, "", "save_review"]], "database.leads.repository": [[5, 1, 1, "", "Repository"]], "database.leads.repository.Repository": [[5, 3, 1, "", "DATETIME_FORMAT"], [5, 6, 1, "", "DF_HISTORICAL_OUTPUT"], [5, 6, 1, "", "DF_INPUT"], [5, 6, 1, "", "DF_OUTPUT"], [5, 6, 1, "", "GPT_RESULTS"], [5, 6, 1, "", "REVIEWS"], [5, 6, 1, "", "SNAPSHOTS"], [5, 2, 1, "", "clean_snapshots"], [5, 2, 1, "", "create_snapshot"], [5, 2, 1, "", "fetch_gpt_result"], [5, 2, 1, "", "fetch_review"], [5, 2, 1, "", "get_dataframe"], [5, 2, 1, "", "get_enriched_data_path"], [5, 2, 1, "", "get_input_path"], [5, 2, 1, "", "get_preprocessed_data_path"], [5, 2, 1, "", "insert_data"], [5, 2, 1, "", "load_classification_report"], [5, 2, 1, "", "load_lookup_table"], [5, 2, 1, "", "load_ml_model"], [5, 2, 1, "", "load_preprocessed_data"], [5, 2, 1, "", "save_classification_report"], [5, 2, 1, "", "save_dataframe"], [5, 2, 1, "", "save_gpt_result"], [5, 2, 1, "", "save_lookup_table"], [5, 2, 1, "", "save_ml_model"], [5, 2, 1, "", "save_prediction"], [5, 2, 1, "", "save_review"], [5, 2, 1, "", "set_dataframe"]], "database.leads.s3_repository": [[5, 1, 1, "", "S3Repository"], [5, 4, 1, "", "decode_s3_url"]], "database.leads.s3_repository.S3Repository": [[5, 3, 1, "", "CLASSIFICATION_REPORTS"], [5, 3, 1, "", "DF_HISTORICAL_OUTPUT"], [5, 3, 1, "", "DF_INPUT"], [5, 3, 1, "", "DF_OUTPUT"], [5, 3, 1, "", "DF_PREDICTION_OUTPUT"], [5, 3, 1, "", "DF_PREPROCESSED_INPUT"], [5, 3, 1, "", "EVENTS_BUCKET"], [5, 3, 1, "", "FEATURES_BUCKET"], [5, 3, 1, "", "GPT_RESULTS"], [5, 3, 1, "", "LOOKUP_TABLES"], [5, 3, 1, "", "ML_MODELS"], [5, 3, 1, "", "MODELS_BUCKET"], [5, 3, 1, "", "REVIEWS"], [5, 3, 1, "", "SNAPSHOTS"], [5, 2, 1, "", "clean_snapshots"], [5, 2, 1, "", "create_snapshot"], [5, 2, 1, "", "fetch_gpt_result"], [5, 2, 1, "", "fetch_review"], [5, 2, 1, "", "get_preprocessed_data_path"], [5, 2, 1, "", "insert_data"], [5, 2, 1, "", "load_classification_report"], [5, 2, 1, "", "load_lookup_table"], [5, 2, 1, "", "load_ml_model"], [5, 2, 1, "", "load_preprocessed_data"], [5, 2, 1, "", "save_classification_report"], [5, 2, 1, "", "save_dataframe"], [5, 2, 1, "", "save_gpt_result"], [5, 2, 1, "", "save_lookup_table"], [5, 2, 1, "", "save_ml_model"], [5, 2, 1, "", "save_prediction"], [5, 2, 1, "", "save_review"]], "demo": [[6, 0, 0, "-", "console_utils"], [6, 0, 0, "-", "demos"], [6, 0, 0, "-", "pipeline_utils"]], "demo.console_utils": [[6, 4, 1, "", "get_int_input"], [6, 4, 1, "", "get_multiple_choice"], [6, 4, 1, "", "get_string_input"], [6, 4, 1, "", "get_yes_no_input"]], "demo.demos": [[6, 4, 1, "", "add_step_if_requested"], [6, 4, 1, "", "evp_demo"], [6, 4, 1, "", "pipeline_demo"], [6, 4, 1, "", "predict_MerchantSize_on_lead_data_demo"], [6, 4, 1, "", "predict_single_lead"], [6, 4, 1, "", "preprocessing_demo"], [6, 4, 1, "", "test_evp_model"]], "demo.pipeline_utils": [[6, 4, 1, "", "get_all_available_pipeline_json_configs"], [6, 4, 1, "", "get_pipeline_additional_steps"], [6, 4, 1, "", "get_pipeline_config_from_json"], [6, 4, 1, "", "get_pipeline_initial_steps"], [6, 4, 1, "", "get_pipeline_steps"]], "evp": [[8, 0, 0, "-", "evp"], [8, 0, 0, "-", "predictors"]], "evp.evp": [[8, 1, 1, "", "EstimatedValuePredictor"]], "evp.evp.EstimatedValuePredictor": [[8, 3, 1, "", "lead_classifier"], [8, 2, 1, "", "predict"], [8, 2, 1, "", "save_model"], [8, 2, 1, "", "train"]], "evp.predictors": [[8, 1, 1, "", "AdaBoost"], [8, 1, 1, "", "Classifier"], [8, 1, 1, "", "KNNClassifier"], [8, 1, 1, "", "LightGBM"], [8, 1, 1, "", "MerchantSizeByDPV"], [8, 1, 1, "", "NaiveBayesClassifier"], [8, 1, 1, "", "Predictors"], [8, 1, 1, "", "RandomForest"], [8, 1, 1, "", "XGB"]], "evp.predictors.AdaBoost": [[8, 2, 1, "", "predict"], [8, 2, 1, "", "train"]], "evp.predictors.Classifier": [[8, 2, 1, "", "load"], [8, 2, 1, "", "predict"], [8, 2, 1, "", "save"], [8, 2, 1, "", "train"]], "evp.predictors.KNNClassifier": [[8, 2, 1, "", "predict"], [8, 2, 1, "", "train"]], "evp.predictors.LightGBM": [[8, 2, 1, "", "predict"], [8, 2, 1, "", "train"]], "evp.predictors.MerchantSizeByDPV": [[8, 3, 1, "", "Invalid"], [8, 3, 1, "", "L"], [8, 3, 1, "", "M"], [8, 3, 1, "", "S"], [8, 3, 1, "", "XL"], [8, 3, 1, "", "XS"]], "evp.predictors.NaiveBayesClassifier": [[8, 2, 1, "", "predict"], [8, 2, 1, "", "train"]], "evp.predictors.Predictors": [[8, 3, 1, "", "AdaBoost"], [8, 3, 1, "", "KNN"], [8, 3, 1, "", "LightGBM"], [8, 3, 1, "", "NaiveBayes"], [8, 3, 1, "", "RandomForest"], [8, 3, 1, "", "XGBoost"]], "evp.predictors.RandomForest": [[8, 2, 1, "", "predict"], [8, 2, 1, "", "train"]], "evp.predictors.XGB": [[8, 2, 1, "", "predict"], [8, 2, 1, "", "train"]], "logger": [[10, 4, 1, "", "get_logger"], [10, 0, 0, "-", "logger"]], "logger.logger": [[10, 1, 1, "", "CustomLogger"], [10, 1, 1, "", "FileOutFormatter"], [10, 1, 1, "", "StdOutFormatter"]], "logger.logger.CustomLogger": [[10, 2, 1, "", "add_file_handler"], [10, 2, 1, "", "disable_console_output"], [10, 2, 1, "", "disable_file_output"], [10, 2, 1, "", "enable_console_output"], [10, 2, 1, "", "enable_file_output"], [10, 2, 1, "", "has_console_handler"], [10, 2, 1, "", "has_file_handler"]], "logger.logger.FileOutFormatter": [[10, 3, 1, "", "fmt"], [10, 2, 1, "", "format"]], "logger.logger.StdOutFormatter": [[10, 3, 1, "", "FORMATS"], [10, 3, 1, "", "blue"], [10, 3, 1, "", "bold_red"], [10, 3, 1, "", "fmt"], [10, 2, 1, "", "format"], [10, 3, 1, "", "grey"], [10, 3, 1, "", "red"], [10, 3, 1, "", "reset"], [10, 3, 1, "", "yellow"]], "preprocessing": [[13, 0, 0, "-", "preprocessing"]], "preprocessing.preprocessing": [[13, 1, 1, "", "Preprocessing"]], "preprocessing.preprocessing.Preprocessing": [[13, 2, 1, "", "class_label_encoding"], [13, 2, 1, "", "fill_missing_values"], [13, 2, 1, "", "filter_out_null_data"], [13, 2, 1, "", "implement_preprocessing_pipeline"], [13, 2, 1, "", "min_max_scaling"], [13, 2, 1, "", "multiple_label_encoding"], [13, 2, 1, "", "normalization"], [13, 2, 1, "", "remove_outliers_zscore"], [13, 2, 1, "", "robust_scaling"], [13, 2, 1, "", "save_preprocessed_data"], [13, 2, 1, "", "single_one_hot_encoding"], [13, 2, 1, "", "standard_scaling"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"bdc": [0, 1, 2, 7], "packag": [0, 1, 2, 4, 5, 6, 8, 10, 13], "subpackag": [0, 1, 4], "submodul": [0, 1, 2, 5, 6, 8, 10, 13], "pipelin": [0, 7], "modul": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13], "content": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 13], "step": [1, 2], "analyze_email": 1, "analyze_review": 1, "google_plac": 1, "google_places_detail": 1, "gpt_summar": 1, "hash_gener": 1, "preprocess_phonenumb": 1, "regionalatla": 1, "search_offeneregist": 1, "helper": 2, "generate_hash_lead": 2, "offeneregister_api": 2, "text_analyz": 2, "config": 3, "databas": [4, 5], "lead": [5, 7, 9, 14], "local_repositori": 5, "repositori": 5, "s3_repositori": 5, "demo": 6, "console_util": 6, "pipeline_util": 6, "build": 7, "document": [7, 9, 14], "creat": 7, "environ": 7, "process": 7, "run": 7, "app": 7, "pre": 7, "commit": 7, "hook": 7, "user": 7, "project": [7, 14], "vision": 7, "mission": 7, "usag": 7, "0": 7, "base": 7, "data": 7, "collector": 7, "1": 7, "preprocess": [7, 13], "2": 7, "ml": 7, "model": 7, "train": 7, "3": 7, "merchant": 7, "size": 7, "predictor": [7, 8], "4": 7, "exit": 7, "design": 7, "introduct": 7, "compon": 7, "diagram": 7, "extern": 7, "softwar": 7, "form": 7, "lf": 7, "custom": 7, "relationship": 7, "manag": 7, "crm": 7, "gener": 7, "descript": 7, "storag": 7, "msp": 7, "estim": 7, "valu": 7, "evp": [7, 8], "histor": 7, "note": 7, "field": 7, "definit": 7, "tabl": [7, 9], "link": 7, "sourc": 7, "csv": 7, "googl": 7, "search": 7, "strategi": 7, "avail": 7, "inform": 7, "method": 7, "openllm": 7, "busi": 7, "type": 7, "analysi": 7, "research": 7, "propos": 7, "solut": 7, "conclus": 7, "classifi": 7, "comparison": 7, "abstract": 7, "experiment": 7, "attempt": 7, "perform": 7, "well": 7, "support": 7, "vector": 7, "machin": 7, "fulli": 7, "connect": 7, "neural": 7, "network": 7, "regress": 7, "qda": 7, "ridg": 7, "tabnet": 7, "architectur": 7, "featur": 7, "subset": 7, "overal": 7, "result": 7, "each": 7, "class": 7, "5": 7, "split": 7, "concept": 7, "unreal": 7, "idea": 7, "miscellan": 7, "unus": 7, "deprec": 7, "control": 7, "facebookgraphapi": 7, "scrapeaddress": 7, "possibl": 7, "improv": 7, "autom": 7, "sequenc": 7, "workflow": 7, "twitter": 7, "api": 7, "limit": 7, "retriev": 7, "bias": 7, "sentiment": 7, "absenc": 7, "usernam": 7, "provid": 7, "inher": 7, "tweet": 7, "": [7, 9], "contribut": 7, "branch": 7, "pull": 7, "request": 7, "sbom": 7, "automat": 7, "knowledg": 7, "aw": 7, "pr": 7, "flow": 7, "berkai": 7, "ai": 7, "what": 7, "do": 7, "we": 7, "need": 7, "troubleshoot": 7, "pipenv": 7, "instal": 7, "stuck": 7, "docker": 7, "vscode": 7, "test": 7, "reus": 7, "fail": 7, "check": 7, "place": 7, "diverg": 7, "welcom": 9, "sale": [9, 14], "qualifi": [9, 14], "indic": 9, "logger": 10, "main": 11, "src": 12, "amo": 14, "w": 14, "2023": 14, "24": 14, "sum": 14, "insight": 14, "logo": 14, "licens": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"bdc package": [[0, "bdc-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [10, "submodules"], [13, "submodules"]], "bdc.pipeline module": [[0, "module-bdc.pipeline"]], "Module contents": [[0, "module-bdc"], [1, "module-bdc.steps"], [2, "module-bdc.steps.helpers"], [4, "module-database"], [5, "module-database.leads"], [6, "module-demo"], [8, "module-evp"], [10, "module-logger"], [13, "module-preprocessing"]], "bdc.steps package": [[1, "bdc-steps-package"]], "bdc.steps.analyze_emails module": [[1, "module-bdc.steps.analyze_emails"]], "bdc.steps.analyze_reviews module": [[1, "module-bdc.steps.analyze_reviews"]], "bdc.steps.google_places module": [[1, "module-bdc.steps.google_places"]], "bdc.steps.google_places_detailed module": [[1, "module-bdc.steps.google_places_detailed"]], "bdc.steps.gpt_summarizer module": [[1, "module-bdc.steps.gpt_summarizer"]], "bdc.steps.hash_generator module": [[1, "module-bdc.steps.hash_generator"]], "bdc.steps.preprocess_phonenumbers module": [[1, "module-bdc.steps.preprocess_phonenumbers"]], "bdc.steps.regionalatlas module": [[1, "module-bdc.steps.regionalatlas"]], "bdc.steps.search_offeneregister module": [[1, "module-bdc.steps.search_offeneregister"]], "bdc.steps.step module": [[1, "module-bdc.steps.step"]], "bdc.steps.helpers package": [[2, "bdc-steps-helpers-package"]], "bdc.steps.helpers.generate_hash_leads module": [[2, "module-bdc.steps.helpers.generate_hash_leads"]], "bdc.steps.helpers.offeneregister_api module": [[2, "module-bdc.steps.helpers.offeneregister_api"]], "bdc.steps.helpers.text_analyzer module": [[2, "module-bdc.steps.helpers.text_analyzer"]], "config module": [[3, "module-config"]], "database package": [[4, "database-package"]], "database.leads package": [[5, "database-leads-package"]], "database.leads.local_repository module": [[5, "module-database.leads.local_repository"]], "database.leads.repository module": [[5, "module-database.leads.repository"]], "database.leads.s3_repository module": [[5, "module-database.leads.s3_repository"]], "demo package": [[6, "demo-package"]], "demo.console_utils module": [[6, "module-demo.console_utils"]], "demo.demos module": [[6, "module-demo.demos"]], "demo.pipeline_utils module": [[6, "module-demo.pipeline_utils"]], "Build Documentation": [[7, "build-documentation"]], "Creating the Environment": [[7, "creating-the-environment"]], "Build Process": [[7, "build-process"]], "Running the app": [[7, "running-the-app"]], "Pre-Commit Hooks": [[7, "pre-commit-hooks"]], "User Documentation": [[7, "user-documentation"]], "Project vision": [[7, "project-vision"]], "Project mission": [[7, "project-mission"]], "Usage": [[7, "usage"]], "(0) : Base Data Collector": [[7, "base-data-collector"]], "(1) : Data preprocessing": [[7, "data-preprocessing"]], "(2) : ML model training": [[7, "ml-model-training"]], "(3) : Merchant Size Predictor": [[7, "merchant-size-predictor"]], "(4) : Exit": [[7, "exit"]], "Design Documentation": [[7, "design-documentation"]], "Introduction": [[7, "introduction"], [7, "introduction"]], "Component Diagram": [[7, "component-diagram"], [7, "component-diagram"]], "External Software": [[7, "external-software"]], "Lead Form (LF)": [[7, "lead-form-lf"]], "Customer Relationship Management (CRM)": [[7, "customer-relationship-management-crm"]], "Components": [[7, "components"]], "Base Data Collector (BDC)": [[7, "base-data-collector-bdc"]], "General description": [[7, "general-description"]], "Design": [[7, "design"], [7, "id1"]], "Data storage": [[7, "data-storage"]], "Merchant Size Predictor (MSP) / Estimated Value Predictor (EVP)": [[7, "merchant-size-predictor-msp-estimated-value-predictor-evp"]], "Historical Note": [[7, "historical-note"]], "Data Fields": [[7, "data-fields"]], "Data Field Definitions": [[7, "data-field-definitions"]], "Data Field Table": [[7, "data-field-table"]], "Links to Data Sources:": [[7, "links-to-data-sources"]], "Data Fields CSV": [[7, "data-fields-csv"]], "Data Field Definition": [[7, "id2"]], "Google Search Strategy": [[7, "google-search-strategy"], [7, "google-search-strategy"]], "Available Lead Information": [[7, "available-lead-information"]], "Available Search Methods": [[7, "available-search-methods"]], "Search Strategy": [[7, "search-strategy"]], "OpenLLM Business Type Analysis": [[7, "openllm-business-type-analysis"]], "Business Type Analysis: Research and Proposed Solution": [[7, "business-type-analysis-research-and-proposed-solution"]], "Research": [[7, "research"]], "Proposed Solution": [[7, "proposed-solution"]], "Conclusion": [[7, "conclusion"], [7, "conclusion"]], "Classifier Comparison": [[7, "classifier-comparison"], [7, "classifier-comparison"]], "Abstract": [[7, "abstract"]], "Experimental Attempts": [[7, "experimental-attempts"]], "Models not performing well": [[7, "models-not-performing-well"]], "Support Vector Machine Classifier Model": [[7, "support-vector-machine-classifier-model"]], "Fully Connected Neural Networks Classifier Model": [[7, "fully-connected-neural-networks-classifier-model"]], "Fully Connected Neural Networks Regression Model": [[7, "fully-connected-neural-networks-regression-model"]], "QDA & Ridge Classifier": [[7, "qda-ridge-classifier"]], "TabNet Architecture": [[7, "tabnet-architecture"]], "Well performing models": [[7, "well-performing-models"]], "Feature subsets": [[7, "feature-subsets"]], "Overall Results": [[7, "overall-results"]], "Results for each class": [[7, "results-for-each-class"]], "5-class split": [[7, "class-split"]], "3-class split": [[7, "id1"]], "Concepts, Unrealized Ideas & Miscellaneous": [[7, "concepts-unrealized-ideas-miscellaneous"]], "Unused Ideas": [[7, "unused-ideas"]], "Deprecated": [[7, "deprecated"]], "Controller": [[7, "controller"], [7, "controller"]], "FacebookGraphAPI": [[7, "facebookgraphapi"]], "ScrapeAddresses": [[7, "scrapeaddresses"]], "Possible ML improvements": [[7, "possible-ml-improvements"]], "Creating data subsets": [[7, "creating-data-subsets"]], "Automation": [[7, "automation"]], "Diagrams": [[7, "diagrams"]], "Sequence Diagram": [[7, "sequence-diagram"]], "Controller Workflow Diagram": [[7, "controller-workflow-diagram"]], "Twitter API Limitation": [[7, "twitter-api-limitation"]], "Limitations of Twitter API for user information retrieval and biased sentiment analysis": [[7, "limitations-of-twitter-api-for-user-information-retrieval-and-biased-sentiment-analysis"]], "Limitation 1: Absence of usernames in provided customer data:": [[7, "limitation-1-absence-of-usernames-in-provided-customer-data"]], "Limitation 2: Inherent Biases in Tweet Content for Sentiment Analysis:": [[7, "limitation-2-inherent-biases-in-tweet-content-for-sentiment-analysis"]], "Links to Twitter\u2019s API documentation:": [[7, "links-to-twitter-s-api-documentation"]], "Contribution": [[7, "contribution"]], "Contribution Workflow": [[7, "contribution-workflow"]], "Branching Strategy": [[7, "branching-strategy"]], "Commits and Pull Requests": [[7, "commits-and-pull-requests"]], "Pull Request Workflow": [[7, "pull-request-workflow"]], "SBOM Generator": [[7, "sbom-generator"]], "Automatic SBOM generation": [[7, "automatic-sbom-generation"]], "Miscellaneous": [[7, "miscellaneous"]], "Miscellaneous Content": [[7, "miscellaneous-content"]], "Knowledge Base": [[7, "knowledge-base"]], "AWS": [[7, "aws"]], "PR Management:": [[7, "pr-management"]], "Branch-Management:": [[7, "branch-management"]], "Pre-commit:": [[7, "pre-commit"]], "Features": [[7, "features"]], "Storage": [[7, "storage"]], "Control flow (Berkay)": [[7, "control-flow-berkay"]], "AI": [[7, "ai"]], "AI Models": [[7, "ai-models"]], "What data do we need?": [[7, "what-data-do-we-need"]], "ML Pipeline": [[7, "ml-pipeline"]], "Troubleshooting": [[7, "troubleshooting"]], "Build": [[7, "build"]], "pipenv": [[7, "pipenv"]], "install stuck": [[7, "install-stuck"]], "Docker": [[7, "docker"]], "VSCode": [[7, "vscode"]], "Testing": [[7, "testing"]], "Reuse": [[7, "reuse"]], "Failed checks": [[7, "failed-checks"]], "BDC": [[7, "bdc"]], "Google Places API": [[7, "google-places-api"]], "Branch-Management": [[7, "id1"]], "Divergent branch": [[7, "divergent-branch"]], "evp package": [[8, "evp-package"]], "evp.evp module": [[8, "module-evp.evp"]], "evp.predictors module": [[8, "module-evp.predictors"]], "Welcome to Sales Lead Qualifier\u2019s documentation!": [[9, "welcome-to-sales-lead-qualifier-s-documentation"]], "Contents:": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]], "logger package": [[10, "logger-package"]], "logger.logger module": [[10, "module-logger.logger"]], "main module": [[11, "module-main"]], "src": [[12, "src"]], "preprocessing package": [[13, "preprocessing-package"]], "preprocessing.preprocessing module": [[13, "module-preprocessing.preprocessing"]], "Sales-Lead-Qualifier Project (AMOS WS 2023/24)": [[14, "sales-lead-qualifier-project-amos-ws-2023-24"]], "Sum Insights Logo": [[14, "sum-insights-logo"]], "Documentation": [[14, "documentation"]], "License": [[14, "license"]]}, "indexentries": {"pipeline (class in bdc.pipeline)": [[0, "bdc.pipeline.Pipeline"]], "bdc": [[0, "module-bdc"]], "bdc.pipeline": [[0, "module-bdc.pipeline"]], "module": [[0, "module-bdc"], [0, "module-bdc.pipeline"], [1, "module-bdc.steps"], [1, "module-bdc.steps.analyze_emails"], [1, "module-bdc.steps.analyze_reviews"], [1, "module-bdc.steps.google_places"], [1, "module-bdc.steps.google_places_detailed"], [1, "module-bdc.steps.gpt_summarizer"], [1, "module-bdc.steps.hash_generator"], [1, "module-bdc.steps.preprocess_phonenumbers"], [1, "module-bdc.steps.regionalatlas"], [1, "module-bdc.steps.search_offeneregister"], [1, "module-bdc.steps.step"], [2, "module-bdc.steps.helpers"], [2, "module-bdc.steps.helpers.generate_hash_leads"], [2, "module-bdc.steps.helpers.offeneregister_api"], [2, "module-bdc.steps.helpers.text_analyzer"], [3, "module-config"], [4, "module-database"], [5, "module-database.leads"], [5, "module-database.leads.local_repository"], [5, "module-database.leads.repository"], [5, "module-database.leads.s3_repository"], [6, "module-demo"], [6, "module-demo.console_utils"], [6, "module-demo.demos"], [6, "module-demo.pipeline_utils"], [8, "module-evp"], [8, "module-evp.evp"], [8, "module-evp.predictors"], [10, "module-logger"], [10, "module-logger.logger"], [11, "module-main"], [13, "module-preprocessing"], [13, "module-preprocessing.preprocessing"]], "run() (bdc.pipeline.pipeline method)": [[0, "bdc.pipeline.Pipeline.run"]], "analyzeemails (class in bdc.steps.analyze_emails)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails"]], "gptreviewsentimentanalyzer (class in bdc.steps.analyze_reviews)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer"]], "gptsummarizer (class in bdc.steps.gpt_summarizer)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer"]], "googleplaces (class in bdc.steps.google_places)": [[1, "bdc.steps.google_places.GooglePlaces"]], "googleplacesdetailed (class in bdc.steps.google_places_detailed)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed"]], "hashgenerator (class in bdc.steps.hash_generator)": [[1, "bdc.steps.hash_generator.HashGenerator"]], "max_prompt_tokens (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.MAX_PROMPT_TOKENS"], [1, "id3"]], "min_ratings_count (bdc.steps.analyze_reviews.smartreviewinsightsenhancer attribute)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.MIN_RATINGS_COUNT"], [1, "id23"]], "preprocessphonenumbers (class in bdc.steps.preprocess_phonenumbers)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers"]], "rating_dominance_threshold (bdc.steps.analyze_reviews.smartreviewinsightsenhancer attribute)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.RATING_DOMINANCE_THRESHOLD"], [1, "id24"]], "regionalatlas (class in bdc.steps.regionalatlas)": [[1, "bdc.steps.regionalatlas.RegionalAtlas"]], "searchoffeneregister (class in bdc.steps.search_offeneregister)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister"]], "smartreviewinsightsenhancer (class in bdc.steps.analyze_reviews)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer"]], "step (class in bdc.steps.step)": [[1, "bdc.steps.step.Step"]], "steperror": [[1, "bdc.steps.step.StepError"]], "_analyze_rating_trend() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._analyze_rating_trend"]], "_calculate_average_grammatical_score() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._calculate_average_grammatical_score"]], "_calculate_score() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._calculate_score"]], "_determine_polarization_type() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._determine_polarization_type"]], "_enhance_review_insights() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._enhance_review_insights"]], "_extract_company_related_data() (bdc.steps.search_offeneregister.searchoffeneregister method)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister._extract_company_related_data"]], "_get_language_tool() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._get_language_tool"]], "_grammatical_errors() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._grammatical_errors"]], "_quantify_polarization() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer._quantify_polarization"]], "added_cols (bdc.steps.analyze_emails.analyzeemails attribute)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails.added_cols"], [1, "id0"]], "added_cols (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.added_cols"], [1, "id4"]], "added_cols (bdc.steps.analyze_reviews.smartreviewinsightsenhancer attribute)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.added_cols"], [1, "id25"]], "added_cols (bdc.steps.google_places.googleplaces attribute)": [[1, "bdc.steps.google_places.GooglePlaces.added_cols"], [1, "id32"]], "added_cols (bdc.steps.google_places_detailed.googleplacesdetailed attribute)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.added_cols"], [1, "id35"]], "added_cols (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.added_cols"], [1, "id38"]], "added_cols (bdc.steps.hash_generator.hashgenerator attribute)": [[1, "bdc.steps.hash_generator.HashGenerator.added_cols"], [1, "id41"]], "added_cols (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers attribute)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.added_cols"], [1, "id44"]], "added_cols (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.added_cols"], [1, "id47"]], "added_cols (bdc.steps.search_offeneregister.searchoffeneregister attribute)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.added_cols"], [1, "id55"]], "added_cols (bdc.steps.step.step attribute)": [[1, "bdc.steps.step.Step.added_cols"], [1, "id63"]], "analyze_email_account() (in module bdc.steps.analyze_emails)": [[1, "bdc.steps.analyze_emails.analyze_email_account"]], "api_fields (bdc.steps.google_places.googleplaces attribute)": [[1, "bdc.steps.google_places.GooglePlaces.api_fields"]], "api_fields (bdc.steps.google_places_detailed.googleplacesdetailed attribute)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.api_fields"]], "api_fields_output (bdc.steps.google_places_detailed.googleplacesdetailed attribute)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.api_fields_output"]], "batch_reviews() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.batch_reviews"], [1, "id5"]], "bdc.steps": [[1, "module-bdc.steps"]], "bdc.steps.analyze_emails": [[1, "module-bdc.steps.analyze_emails"]], "bdc.steps.analyze_reviews": [[1, "module-bdc.steps.analyze_reviews"]], "bdc.steps.google_places": [[1, "module-bdc.steps.google_places"]], "bdc.steps.google_places_detailed": [[1, "module-bdc.steps.google_places_detailed"]], "bdc.steps.gpt_summarizer": [[1, "module-bdc.steps.gpt_summarizer"]], "bdc.steps.hash_generator": [[1, "module-bdc.steps.hash_generator"]], "bdc.steps.preprocess_phonenumbers": [[1, "module-bdc.steps.preprocess_phonenumbers"]], "bdc.steps.regionalatlas": [[1, "module-bdc.steps.regionalatlas"]], "bdc.steps.search_offeneregister": [[1, "module-bdc.steps.search_offeneregister"]], "bdc.steps.step": [[1, "module-bdc.steps.step"]], "calculate_confidence() (bdc.steps.google_places.googleplaces method)": [[1, "bdc.steps.google_places.GooglePlaces.calculate_confidence"]], "calculate_regional_score() (bdc.steps.regionalatlas.regionalatlas method)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.calculate_regional_score"]], "check_api_key() (in module bdc.steps.analyze_reviews)": [[1, "bdc.steps.analyze_reviews.check_api_key"]], "check_data_presence() (bdc.steps.step.step method)": [[1, "bdc.steps.step.Step.check_data_presence"]], "check_number() (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers method)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.check_number"]], "client (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.client"]], "df (bdc.steps.step.step property)": [[1, "bdc.steps.step.Step.df"]], "df_fields (bdc.steps.google_places.googleplaces attribute)": [[1, "bdc.steps.google_places.GooglePlaces.df_fields"]], "df_fields (bdc.steps.google_places_detailed.googleplacesdetailed attribute)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.df_fields"]], "df_fields (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.df_fields"], [1, "id48"]], "empty_result (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.empty_result"], [1, "id49"]], "epsg_code_etrs (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.epsg_code_etrs"], [1, "id50"]], "extract_custom_domain() (in module bdc.steps.analyze_emails)": [[1, "bdc.steps.analyze_emails.extract_custom_domain"]], "extract_text_from_reviews() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.extract_text_from_reviews"], [1, "id6"]], "extract_the_raw_html_and_parse() (bdc.steps.gpt_summarizer.gptsummarizer method)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.extract_the_raw_html_and_parse"]], "extracted_col_name (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.extracted_col_name"], [1, "id7"]], "extracted_col_name_website_summary (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.extracted_col_name_website_summary"]], "finish() (bdc.steps.analyze_emails.analyzeemails method)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails.finish"]], "finish() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.finish"], [1, "id8"]], "finish() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.finish"], [1, "id26"]], "finish() (bdc.steps.google_places.googleplaces method)": [[1, "bdc.steps.google_places.GooglePlaces.finish"]], "finish() (bdc.steps.google_places_detailed.googleplacesdetailed method)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.finish"]], "finish() (bdc.steps.gpt_summarizer.gptsummarizer method)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.finish"]], "finish() (bdc.steps.hash_generator.hashgenerator method)": [[1, "bdc.steps.hash_generator.HashGenerator.finish"]], "finish() (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers method)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.finish"]], "finish() (bdc.steps.regionalatlas.regionalatlas method)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.finish"]], "finish() (bdc.steps.search_offeneregister.searchoffeneregister method)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.finish"], [1, "id56"]], "finish() (bdc.steps.step.step method)": [[1, "bdc.steps.step.Step.finish"]], "get_data_from_address() (bdc.steps.regionalatlas.regionalatlas method)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.get_data_from_address"]], "get_data_from_detailed_google_api() (bdc.steps.google_places_detailed.googleplacesdetailed method)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.get_data_from_detailed_google_api"]], "get_data_from_google_api() (bdc.steps.google_places.googleplaces method)": [[1, "bdc.steps.google_places.GooglePlaces.get_data_from_google_api"]], "get_first_place_candidate() (bdc.steps.google_places.googleplaces method)": [[1, "bdc.steps.google_places.GooglePlaces.get_first_place_candidate"]], "gmaps (bdc.steps.google_places.googleplaces attribute)": [[1, "bdc.steps.google_places.GooglePlaces.gmaps"]], "gmaps (bdc.steps.google_places_detailed.googleplacesdetailed attribute)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.gmaps"]], "gpt (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.gpt"], [1, "id9"]], "gpt_calculate_avg_sentiment_score() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.gpt_calculate_avg_sentiment_score"]], "gpt_required_fields (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.gpt_required_fields"], [1, "id10"]], "gpt_required_fields (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.gpt_required_fields"]], "gpt_sentiment_analyze_review() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.gpt_sentiment_analyze_review"], [1, "id11"]], "is_review_valid() (in module bdc.steps.analyze_reviews)": [[1, "bdc.steps.analyze_reviews.is_review_valid"]], "language_tools (bdc.steps.analyze_reviews.smartreviewinsightsenhancer attribute)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.language_tools"]], "load_data() (bdc.steps.analyze_emails.analyzeemails method)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails.load_data"]], "load_data() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.load_data"], [1, "id12"]], "load_data() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.load_data"], [1, "id27"]], "load_data() (bdc.steps.google_places.googleplaces method)": [[1, "bdc.steps.google_places.GooglePlaces.load_data"]], "load_data() (bdc.steps.google_places_detailed.googleplacesdetailed method)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.load_data"]], "load_data() (bdc.steps.gpt_summarizer.gptsummarizer method)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.load_data"]], "load_data() (bdc.steps.hash_generator.hashgenerator method)": [[1, "bdc.steps.hash_generator.HashGenerator.load_data"]], "load_data() (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers method)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.load_data"]], "load_data() (bdc.steps.regionalatlas.regionalatlas method)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.load_data"]], "load_data() (bdc.steps.search_offeneregister.searchoffeneregister method)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.load_data"], [1, "id57"]], "load_data() (bdc.steps.step.step method)": [[1, "bdc.steps.step.Step.load_data"]], "log (in module bdc.steps.analyze_reviews)": [[1, "bdc.steps.analyze_reviews.log"]], "model (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.model"], [1, "id13"]], "model (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.model"]], "model_encoding_name (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.model_encoding_name"], [1, "id14"]], "name (bdc.steps.analyze_emails.analyzeemails attribute)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails.name"], [1, "id1"]], "name (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.name"], [1, "id15"]], "name (bdc.steps.analyze_reviews.smartreviewinsightsenhancer attribute)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.name"], [1, "id28"]], "name (bdc.steps.google_places.googleplaces attribute)": [[1, "bdc.steps.google_places.GooglePlaces.name"], [1, "id33"]], "name (bdc.steps.google_places_detailed.googleplacesdetailed attribute)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.name"], [1, "id36"]], "name (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.name"], [1, "id39"]], "name (bdc.steps.hash_generator.hashgenerator attribute)": [[1, "bdc.steps.hash_generator.HashGenerator.name"], [1, "id42"]], "name (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers attribute)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.name"], [1, "id45"]], "name (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.name"], [1, "id51"]], "name (bdc.steps.search_offeneregister.searchoffeneregister attribute)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.name"], [1, "id58"]], "name (bdc.steps.step.step attribute)": [[1, "bdc.steps.step.Step.name"], [1, "id64"]], "no_answer (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.no_answer"], [1, "id16"]], "no_answer (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.no_answer"]], "num_tokens_from_string() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.num_tokens_from_string"], [1, "id17"]], "offeneregisterapi (bdc.steps.search_offeneregister.searchoffeneregister attribute)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.offeneregisterAPI"], [1, "id59"]], "process_row() (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers method)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.process_row"]], "reagionalatlas_feature_keys (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.reagionalatlas_feature_keys"], [1, "id52"]], "regions_gdfs (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.regions_gdfs"], [1, "id53"]], "required_cols (bdc.steps.analyze_emails.analyzeemails attribute)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails.required_cols"], [1, "id2"]], "required_cols (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.required_cols"]], "required_cols (bdc.steps.google_places.googleplaces attribute)": [[1, "bdc.steps.google_places.GooglePlaces.required_cols"], [1, "id34"]], "required_cols (bdc.steps.google_places_detailed.googleplacesdetailed attribute)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.required_cols"], [1, "id37"]], "required_cols (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.required_cols"], [1, "id40"]], "required_cols (bdc.steps.hash_generator.hashgenerator attribute)": [[1, "bdc.steps.hash_generator.HashGenerator.required_cols"], [1, "id43"]], "required_cols (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers attribute)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.required_cols"], [1, "id46"]], "required_cols (bdc.steps.regionalatlas.regionalatlas attribute)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.required_cols"], [1, "id54"]], "required_cols (bdc.steps.search_offeneregister.searchoffeneregister attribute)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.required_cols"], [1, "id60"]], "required_cols (bdc.steps.step.step attribute)": [[1, "bdc.steps.step.Step.required_cols"], [1, "id65"]], "required_fields (bdc.steps.analyze_reviews.smartreviewinsightsenhancer attribute)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.required_fields"], [1, "id29"]], "run() (bdc.steps.analyze_emails.analyzeemails method)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails.run"]], "run() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.run"], [1, "id18"]], "run() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.run"], [1, "id30"]], "run() (bdc.steps.google_places.googleplaces method)": [[1, "bdc.steps.google_places.GooglePlaces.run"]], "run() (bdc.steps.google_places_detailed.googleplacesdetailed method)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.run"]], "run() (bdc.steps.gpt_summarizer.gptsummarizer method)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.run"]], "run() (bdc.steps.hash_generator.hashgenerator method)": [[1, "bdc.steps.hash_generator.HashGenerator.run"]], "run() (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers method)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.run"]], "run() (bdc.steps.regionalatlas.regionalatlas method)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.run"]], "run() (bdc.steps.search_offeneregister.searchoffeneregister method)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.run"], [1, "id61"]], "run() (bdc.steps.step.step method)": [[1, "bdc.steps.step.Step.run"]], "run_sentiment_analysis() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.run_sentiment_analysis"], [1, "id19"]], "summarize_the_company_website() (bdc.steps.gpt_summarizer.gptsummarizer method)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.summarize_the_company_website"]], "system_message_for_sentiment_analysis (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.system_message_for_sentiment_analysis"], [1, "id20"]], "system_message_for_website_summary (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.system_message_for_website_summary"]], "text_analyzer (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.text_analyzer"]], "text_analyzer (bdc.steps.analyze_reviews.smartreviewinsightsenhancer attribute)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.text_analyzer"]], "textblob_calculate_avg_sentiment_score() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.textblob_calculate_avg_sentiment_score"]], "user_message_for_sentiment_analysis (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer attribute)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.user_message_for_sentiment_analysis"], [1, "id21"]], "user_message_for_website_summary (bdc.steps.gpt_summarizer.gptsummarizer attribute)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.user_message_for_website_summary"]], "verify() (bdc.steps.analyze_emails.analyzeemails method)": [[1, "bdc.steps.analyze_emails.AnalyzeEmails.verify"]], "verify() (bdc.steps.analyze_reviews.gptreviewsentimentanalyzer method)": [[1, "bdc.steps.analyze_reviews.GPTReviewSentimentAnalyzer.verify"], [1, "id22"]], "verify() (bdc.steps.analyze_reviews.smartreviewinsightsenhancer method)": [[1, "bdc.steps.analyze_reviews.SmartReviewInsightsEnhancer.verify"], [1, "id31"]], "verify() (bdc.steps.google_places.googleplaces method)": [[1, "bdc.steps.google_places.GooglePlaces.verify"]], "verify() (bdc.steps.google_places_detailed.googleplacesdetailed method)": [[1, "bdc.steps.google_places_detailed.GooglePlacesDetailed.verify"]], "verify() (bdc.steps.gpt_summarizer.gptsummarizer method)": [[1, "bdc.steps.gpt_summarizer.GPTSummarizer.verify"]], "verify() (bdc.steps.hash_generator.hashgenerator method)": [[1, "bdc.steps.hash_generator.HashGenerator.verify"]], "verify() (bdc.steps.preprocess_phonenumbers.preprocessphonenumbers method)": [[1, "bdc.steps.preprocess_phonenumbers.PreprocessPhonenumbers.verify"]], "verify() (bdc.steps.regionalatlas.regionalatlas method)": [[1, "bdc.steps.regionalatlas.RegionalAtlas.verify"]], "verify() (bdc.steps.search_offeneregister.searchoffeneregister method)": [[1, "bdc.steps.search_offeneregister.SearchOffeneRegister.verify"], [1, "id62"]], "verify() (bdc.steps.step.step method)": [[1, "bdc.steps.step.Step.verify"]], "base_path (bdc.steps.helpers.generate_hash_leads.leadhashgenerator attribute)": [[2, "bdc.steps.helpers.generate_hash_leads.LeadHashGenerator.BASE_PATH"]], "leadhashgenerator (class in bdc.steps.helpers.generate_hash_leads)": [[2, "bdc.steps.helpers.generate_hash_leads.LeadHashGenerator"]], "offeneregisterapi (class in bdc.steps.helpers.offeneregister_api)": [[2, "bdc.steps.helpers.offeneregister_api.OffeneRegisterAPI"]], "target_lang (bdc.steps.helpers.text_analyzer.textanalyzer attribute)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer.TARGET_LANG"]], "textanalyzer (class in bdc.steps.helpers.text_analyzer)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer"]], "bdc.steps.helpers": [[2, "module-bdc.steps.helpers"]], "bdc.steps.helpers.generate_hash_leads": [[2, "module-bdc.steps.helpers.generate_hash_leads"]], "bdc.steps.helpers.offeneregister_api": [[2, "module-bdc.steps.helpers.offeneregister_api"]], "bdc.steps.helpers.text_analyzer": [[2, "module-bdc.steps.helpers.text_analyzer"]], "calculate_sentiment_analysis_score() (bdc.steps.helpers.text_analyzer.textanalyzer method)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer.calculate_sentiment_analysis_score"]], "correct_text() (bdc.steps.helpers.text_analyzer.textanalyzer method)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer.correct_text"]], "find_companyaddress_by_lastname_firstname() (bdc.steps.helpers.offeneregister_api.offeneregisterapi method)": [[2, "bdc.steps.helpers.offeneregister_api.OffeneRegisterAPI.find_companyAddress_by_lastName_firstName"]], "find_companycapitals_by_lastname_firstname() (bdc.steps.helpers.offeneregister_api.offeneregisterapi method)": [[2, "bdc.steps.helpers.offeneregister_api.OffeneRegisterAPI.find_companyCapitals_by_lastName_firstName"]], "find_companyname_by_lastname_firstname() (bdc.steps.helpers.offeneregister_api.offeneregisterapi method)": [[2, "bdc.steps.helpers.offeneregister_api.OffeneRegisterAPI.find_companyName_by_lastName_firstName"]], "find_companyobjective_by_lastname_firstname() (bdc.steps.helpers.offeneregister_api.offeneregisterapi method)": [[2, "bdc.steps.helpers.offeneregister_api.OffeneRegisterAPI.find_companyObjective_by_lastName_firstName"]], "find_number_of_grammatical_errors() (bdc.steps.helpers.text_analyzer.textanalyzer method)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer.find_number_of_grammatical_errors"]], "find_number_of_spelling_errors() (bdc.steps.helpers.text_analyzer.textanalyzer method)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer.find_number_of_spelling_errors"]], "find_spelling_errors() (bdc.steps.helpers.text_analyzer.textanalyzer method)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer.find_spelling_errors"]], "get_lead_hash_generator() (in module bdc.steps.helpers)": [[2, "bdc.steps.helpers.get_lead_hash_generator"]], "hash_check() (bdc.steps.helpers.generate_hash_leads.leadhashgenerator method)": [[2, "bdc.steps.helpers.generate_hash_leads.LeadHashGenerator.hash_check"]], "hash_lead() (bdc.steps.helpers.generate_hash_leads.leadhashgenerator method)": [[2, "bdc.steps.helpers.generate_hash_leads.LeadHashGenerator.hash_lead"]], "translate() (bdc.steps.helpers.text_analyzer.textanalyzer method)": [[2, "bdc.steps.helpers.text_analyzer.TextAnalyzer.translate"]], "config": [[3, "module-config"]], "database": [[4, "module-database"]], "get_database() (in module database)": [[4, "database.get_database"]], "base_path (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.BASE_PATH"]], "classification_reports (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.CLASSIFICATION_REPORTS"]], "classification_reports (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.CLASSIFICATION_REPORTS"]], "datetime_format (database.leads.repository.repository attribute)": [[5, "database.leads.repository.Repository.DATETIME_FORMAT"]], "df_historical_output (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.DF_HISTORICAL_OUTPUT"]], "df_historical_output (database.leads.repository.repository property)": [[5, "database.leads.repository.Repository.DF_HISTORICAL_OUTPUT"]], "df_historical_output (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.DF_HISTORICAL_OUTPUT"]], "df_input (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.DF_INPUT"]], "df_input (database.leads.repository.repository property)": [[5, "database.leads.repository.Repository.DF_INPUT"]], "df_input (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.DF_INPUT"]], "df_output (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.DF_OUTPUT"]], "df_output (database.leads.repository.repository property)": [[5, "database.leads.repository.Repository.DF_OUTPUT"]], "df_output (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.DF_OUTPUT"]], "df_prediction_output (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.DF_PREDICTION_OUTPUT"]], "df_prediction_output (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.DF_PREDICTION_OUTPUT"]], "df_preprocessed_input (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.DF_PREPROCESSED_INPUT"]], "df_preprocessed_input (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.DF_PREPROCESSED_INPUT"]], "events_bucket (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.EVENTS_BUCKET"]], "features_bucket (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.FEATURES_BUCKET"]], "gpt_results (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.GPT_RESULTS"]], "gpt_results (database.leads.repository.repository property)": [[5, "database.leads.repository.Repository.GPT_RESULTS"]], "gpt_results (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.GPT_RESULTS"]], "lookup_tables (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.LOOKUP_TABLES"]], "localrepository (class in database.leads.local_repository)": [[5, "database.leads.local_repository.LocalRepository"]], "ml_models (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.ML_MODELS"]], "ml_models (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.ML_MODELS"]], "models_bucket (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.MODELS_BUCKET"]], "reviews (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.REVIEWS"]], "reviews (database.leads.repository.repository property)": [[5, "database.leads.repository.Repository.REVIEWS"]], "reviews (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.REVIEWS"]], "repository (class in database.leads.repository)": [[5, "database.leads.repository.Repository"]], "s3repository (class in database.leads.s3_repository)": [[5, "database.leads.s3_repository.S3Repository"]], "snapshots (database.leads.local_repository.localrepository attribute)": [[5, "database.leads.local_repository.LocalRepository.SNAPSHOTS"]], "snapshots (database.leads.repository.repository property)": [[5, "database.leads.repository.Repository.SNAPSHOTS"]], "snapshots (database.leads.s3_repository.s3repository attribute)": [[5, "database.leads.s3_repository.S3Repository.SNAPSHOTS"]], "clean_snapshots() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.clean_snapshots"]], "clean_snapshots() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.clean_snapshots"]], "clean_snapshots() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.clean_snapshots"]], "create_snapshot() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.create_snapshot"]], "create_snapshot() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.create_snapshot"]], "create_snapshot() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.create_snapshot"]], "database.leads": [[5, "module-database.leads"]], "database.leads.local_repository": [[5, "module-database.leads.local_repository"]], "database.leads.repository": [[5, "module-database.leads.repository"]], "database.leads.s3_repository": [[5, "module-database.leads.s3_repository"]], "decode_s3_url() (in module database.leads.s3_repository)": [[5, "database.leads.s3_repository.decode_s3_url"]], "fetch_gpt_result() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.fetch_gpt_result"]], "fetch_gpt_result() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.fetch_gpt_result"]], "fetch_gpt_result() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.fetch_gpt_result"]], "fetch_review() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.fetch_review"]], "fetch_review() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.fetch_review"]], "fetch_review() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.fetch_review"]], "get_dataframe() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.get_dataframe"]], "get_enriched_data_path() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.get_enriched_data_path"]], "get_input_path() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.get_input_path"]], "get_preprocessed_data_path() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.get_preprocessed_data_path"]], "get_preprocessed_data_path() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.get_preprocessed_data_path"]], "get_preprocessed_data_path() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.get_preprocessed_data_path"]], "insert_data() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.insert_data"]], "insert_data() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.insert_data"]], "insert_data() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.insert_data"]], "load_classification_report() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.load_classification_report"]], "load_classification_report() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.load_classification_report"]], "load_classification_report() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.load_classification_report"]], "load_lookup_table() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.load_lookup_table"]], "load_lookup_table() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.load_lookup_table"]], "load_lookup_table() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.load_lookup_table"]], "load_ml_model() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.load_ml_model"]], "load_ml_model() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.load_ml_model"]], "load_ml_model() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.load_ml_model"]], "load_preprocessed_data() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.load_preprocessed_data"]], "load_preprocessed_data() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.load_preprocessed_data"]], "load_preprocessed_data() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.load_preprocessed_data"]], "save_classification_report() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.save_classification_report"]], "save_classification_report() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.save_classification_report"]], "save_classification_report() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.save_classification_report"]], "save_dataframe() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.save_dataframe"]], "save_dataframe() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.save_dataframe"]], "save_dataframe() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.save_dataframe"]], "save_gpt_result() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.save_gpt_result"]], "save_gpt_result() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.save_gpt_result"]], "save_gpt_result() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.save_gpt_result"]], "save_lookup_table() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.save_lookup_table"]], "save_lookup_table() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.save_lookup_table"]], "save_lookup_table() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.save_lookup_table"]], "save_ml_model() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.save_ml_model"]], "save_ml_model() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.save_ml_model"]], "save_ml_model() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.save_ml_model"]], "save_prediction() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.save_prediction"]], "save_prediction() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.save_prediction"]], "save_prediction() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.save_prediction"]], "save_review() (database.leads.local_repository.localrepository method)": [[5, "database.leads.local_repository.LocalRepository.save_review"]], "save_review() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.save_review"]], "save_review() (database.leads.s3_repository.s3repository method)": [[5, "database.leads.s3_repository.S3Repository.save_review"]], "set_dataframe() (database.leads.repository.repository method)": [[5, "database.leads.repository.Repository.set_dataframe"]], "add_step_if_requested() (in module demo.demos)": [[6, "demo.demos.add_step_if_requested"]], "demo": [[6, "module-demo"]], "demo.console_utils": [[6, "module-demo.console_utils"]], "demo.demos": [[6, "module-demo.demos"]], "demo.pipeline_utils": [[6, "module-demo.pipeline_utils"]], "evp_demo() (in module demo.demos)": [[6, "demo.demos.evp_demo"]], "get_all_available_pipeline_json_configs() (in module demo.pipeline_utils)": [[6, "demo.pipeline_utils.get_all_available_pipeline_json_configs"]], "get_int_input() (in module demo.console_utils)": [[6, "demo.console_utils.get_int_input"]], "get_multiple_choice() (in module demo.console_utils)": [[6, "demo.console_utils.get_multiple_choice"]], "get_pipeline_additional_steps() (in module demo.pipeline_utils)": [[6, "demo.pipeline_utils.get_pipeline_additional_steps"]], "get_pipeline_config_from_json() (in module demo.pipeline_utils)": [[6, "demo.pipeline_utils.get_pipeline_config_from_json"]], "get_pipeline_initial_steps() (in module demo.pipeline_utils)": [[6, "demo.pipeline_utils.get_pipeline_initial_steps"]], "get_pipeline_steps() (in module demo.pipeline_utils)": [[6, "demo.pipeline_utils.get_pipeline_steps"]], "get_string_input() (in module demo.console_utils)": [[6, "demo.console_utils.get_string_input"]], "get_yes_no_input() (in module demo.console_utils)": [[6, "demo.console_utils.get_yes_no_input"]], "pipeline_demo() (in module demo.demos)": [[6, "demo.demos.pipeline_demo"]], "predict_merchantsize_on_lead_data_demo() (in module demo.demos)": [[6, "demo.demos.predict_MerchantSize_on_lead_data_demo"]], "predict_single_lead() (in module demo.demos)": [[6, "demo.demos.predict_single_lead"]], "preprocessing_demo() (in module demo.demos)": [[6, "demo.demos.preprocessing_demo"]], "test_evp_model() (in module demo.demos)": [[6, "demo.demos.test_evp_model"]], "adaboost (class in evp.predictors)": [[8, "evp.predictors.AdaBoost"]], "adaboost (evp.predictors.predictors attribute)": [[8, "evp.predictors.Predictors.AdaBoost"]], "classifier (class in evp.predictors)": [[8, "evp.predictors.Classifier"]], "estimatedvaluepredictor (class in evp.evp)": [[8, "evp.evp.EstimatedValuePredictor"]], "invalid (evp.predictors.merchantsizebydpv attribute)": [[8, "evp.predictors.MerchantSizeByDPV.Invalid"]], "knn (evp.predictors.predictors attribute)": [[8, "evp.predictors.Predictors.KNN"]], "knnclassifier (class in evp.predictors)": [[8, "evp.predictors.KNNClassifier"]], "l (evp.predictors.merchantsizebydpv attribute)": [[8, "evp.predictors.MerchantSizeByDPV.L"]], "lightgbm (class in evp.predictors)": [[8, "evp.predictors.LightGBM"]], "lightgbm (evp.predictors.predictors attribute)": [[8, "evp.predictors.Predictors.LightGBM"]], "m (evp.predictors.merchantsizebydpv attribute)": [[8, "evp.predictors.MerchantSizeByDPV.M"]], "merchantsizebydpv (class in evp.predictors)": [[8, "evp.predictors.MerchantSizeByDPV"]], "naivebayes (evp.predictors.predictors attribute)": [[8, "evp.predictors.Predictors.NaiveBayes"]], "naivebayesclassifier (class in evp.predictors)": [[8, "evp.predictors.NaiveBayesClassifier"]], "predictors (class in evp.predictors)": [[8, "evp.predictors.Predictors"]], "randomforest (class in evp.predictors)": [[8, "evp.predictors.RandomForest"]], "randomforest (evp.predictors.predictors attribute)": [[8, "evp.predictors.Predictors.RandomForest"]], "s (evp.predictors.merchantsizebydpv attribute)": [[8, "evp.predictors.MerchantSizeByDPV.S"]], "xgb (class in evp.predictors)": [[8, "evp.predictors.XGB"]], "xgboost (evp.predictors.predictors attribute)": [[8, "evp.predictors.Predictors.XGBoost"]], "xl (evp.predictors.merchantsizebydpv attribute)": [[8, "evp.predictors.MerchantSizeByDPV.XL"]], "xs (evp.predictors.merchantsizebydpv attribute)": [[8, "evp.predictors.MerchantSizeByDPV.XS"]], "evp": [[8, "module-evp"]], "evp.evp": [[8, "module-evp.evp"]], "evp.predictors": [[8, "module-evp.predictors"]], "lead_classifier (evp.evp.estimatedvaluepredictor attribute)": [[8, "evp.evp.EstimatedValuePredictor.lead_classifier"]], "load() (evp.predictors.classifier method)": [[8, "evp.predictors.Classifier.load"]], "predict() (evp.evp.estimatedvaluepredictor method)": [[8, "evp.evp.EstimatedValuePredictor.predict"]], "predict() (evp.predictors.adaboost method)": [[8, "evp.predictors.AdaBoost.predict"]], "predict() (evp.predictors.classifier method)": [[8, "evp.predictors.Classifier.predict"]], "predict() (evp.predictors.knnclassifier method)": [[8, "evp.predictors.KNNClassifier.predict"]], "predict() (evp.predictors.lightgbm method)": [[8, "evp.predictors.LightGBM.predict"]], "predict() (evp.predictors.naivebayesclassifier method)": [[8, "evp.predictors.NaiveBayesClassifier.predict"]], "predict() (evp.predictors.randomforest method)": [[8, "evp.predictors.RandomForest.predict"]], "predict() (evp.predictors.xgb method)": [[8, "evp.predictors.XGB.predict"]], "save() (evp.predictors.classifier method)": [[8, "evp.predictors.Classifier.save"]], "save_model() (evp.evp.estimatedvaluepredictor method)": [[8, "evp.evp.EstimatedValuePredictor.save_model"]], "train() (evp.evp.estimatedvaluepredictor method)": [[8, "evp.evp.EstimatedValuePredictor.train"]], "train() (evp.predictors.adaboost method)": [[8, "evp.predictors.AdaBoost.train"]], "train() (evp.predictors.classifier method)": [[8, "evp.predictors.Classifier.train"]], "train() (evp.predictors.knnclassifier method)": [[8, "evp.predictors.KNNClassifier.train"]], "train() (evp.predictors.lightgbm method)": [[8, "evp.predictors.LightGBM.train"]], "train() (evp.predictors.naivebayesclassifier method)": [[8, "evp.predictors.NaiveBayesClassifier.train"]], "train() (evp.predictors.randomforest method)": [[8, "evp.predictors.RandomForest.train"]], "train() (evp.predictors.xgb method)": [[8, "evp.predictors.XGB.train"]], "customlogger (class in logger.logger)": [[10, "logger.logger.CustomLogger"]], "formats (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.FORMATS"]], "fileoutformatter (class in logger.logger)": [[10, "logger.logger.FileOutFormatter"]], "stdoutformatter (class in logger.logger)": [[10, "logger.logger.StdOutFormatter"]], "add_file_handler() (logger.logger.customlogger method)": [[10, "logger.logger.CustomLogger.add_file_handler"]], "blue (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.blue"]], "bold_red (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.bold_red"]], "disable_console_output() (logger.logger.customlogger method)": [[10, "logger.logger.CustomLogger.disable_console_output"]], "disable_file_output() (logger.logger.customlogger method)": [[10, "logger.logger.CustomLogger.disable_file_output"]], "enable_console_output() (logger.logger.customlogger method)": [[10, "logger.logger.CustomLogger.enable_console_output"]], "enable_file_output() (logger.logger.customlogger method)": [[10, "logger.logger.CustomLogger.enable_file_output"]], "fmt (logger.logger.fileoutformatter attribute)": [[10, "logger.logger.FileOutFormatter.fmt"]], "fmt (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.fmt"]], "format() (logger.logger.fileoutformatter method)": [[10, "logger.logger.FileOutFormatter.format"]], "format() (logger.logger.stdoutformatter method)": [[10, "logger.logger.StdOutFormatter.format"]], "get_logger() (in module logger)": [[10, "logger.get_logger"]], "grey (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.grey"]], "has_console_handler() (logger.logger.customlogger method)": [[10, "logger.logger.CustomLogger.has_console_handler"]], "has_file_handler() (logger.logger.customlogger method)": [[10, "logger.logger.CustomLogger.has_file_handler"]], "logger": [[10, "module-logger"]], "logger.logger": [[10, "module-logger.logger"]], "red (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.red"]], "reset (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.reset"]], "yellow (logger.logger.stdoutformatter attribute)": [[10, "logger.logger.StdOutFormatter.yellow"]], "main": [[11, "module-main"]], "preprocessing (class in preprocessing.preprocessing)": [[13, "preprocessing.preprocessing.Preprocessing"]], "class_label_encoding() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.class_label_encoding"]], "fill_missing_values() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.fill_missing_values"]], "filter_out_null_data() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.filter_out_null_data"]], "implement_preprocessing_pipeline() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.implement_preprocessing_pipeline"]], "min_max_scaling() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.min_max_scaling"]], "multiple_label_encoding() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.multiple_label_encoding"]], "normalization() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.normalization"]], "preprocessing": [[13, "module-preprocessing"]], "preprocessing.preprocessing": [[13, "module-preprocessing.preprocessing"]], "remove_outliers_zscore() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.remove_outliers_zscore"]], "robust_scaling() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.robust_scaling"]], "save_preprocessed_data() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.save_preprocessed_data"]], "single_one_hot_encoding() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.single_one_hot_encoding"]], "standard_scaling() (preprocessing.preprocessing.preprocessing method)": [[13, "preprocessing.preprocessing.Preprocessing.standard_scaling"]]}})