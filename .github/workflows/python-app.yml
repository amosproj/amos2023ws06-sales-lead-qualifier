# SPDX-License-Identifier: MIT
# SPDX-FileCopyrightText: 2023 Lucca Baumg√§rtner <lucca.baumgaertner@fau.de>

# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: [push, pull_request]

permissions:
  contents: read

jobs:
  license:
    name: License check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Dump all dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install
          pipenv run pip freeze > requirements-all.txt
      - name: Check copyright
        id: license_check_report
        uses: pilosus/action-pip-license-checker@v2
        with:
          requirements: "requirements-all.txt"
          fail: "Copyleft"
          totals: true
          headers: true
      - name: Print copyright report
        run: echo "${{ steps.license_check_report.outputs.report }}"

  build:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pipenv"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pipenv
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pipenv install --verbose
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pipenv run python -m pytest
